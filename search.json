[{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"tutorial-data-processing","dir":"Articles","previous_headings":"","what":"Tutorial data processing","title":"Tutorial data processing","text":"2024-04-03 tutorial walks quality checks first diving dataset taxonomic compositions. Note tutorial include sequence quality filtering, assuming already done example DADA2. focus filtering dataset keep bacterial reads, inspect blanks, removing samples reads. handle steps may depend dataset, ’s demonstration give idea options.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"setting-up","dir":"Articles","previous_headings":"Tutorial data processing","what":"Setting up","title":"Tutorial data processing","text":"need two packages: tidytacos (course) tidyverse set packages.","code":"library(tidyverse) library(tidytacos)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"our-data","dir":"Articles","previous_headings":"Tutorial data processing","what":"Our data","title":"Tutorial data processing","text":"data tutorial found tidytacos object ‘leaf’. data comes study phyllosphere microbiome plants treated. sampling, DNA extraction spike bacterium added samples serve internal standard determine absolute abundances bacteria samples (explained Smets et al. 2016).","code":"tacosum(leaf) ## n_samples    n_taxa   n_reads  ##        33      6054   4389396"},{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"filter-out-undesired-taxa","dir":"Articles","previous_headings":"Tutorial data processing","what":"Filter out undesired taxa","title":"Tutorial data processing","text":"study, choose sequence V4 region 16S rRNA gene specifically study bacterial fraction microbial community, hence filter_taxa used discard non-bacterial reads mitochondria, chloroplasts, archaea. Using tacosum filtering helps us understand 60% reads bacterial. phyllosphere samples uncommon find large fraction chloroplasts /mitochondria, plant cell organelles contain 16S rRNA gene, hence substantial loss reads step. Depending database used assigning taxonomy, may need adapt code use example:","code":"before <- tacosum(leaf)[3]  leaf <- leaf%>%   filter_taxa(kingdom == \"Bacteria\")  tacosum(leaf) ## n_samples    n_taxa   n_reads  ##        33      5589   2634933 after<-tacosum(leaf)[3] after/before ##   n_reads  ## 0.6002951 leaf <- leaf%>%   filter_taxa(class != \"Chloroplast\" | is.na(class))%>%   filter_taxa(family != \"Mitochondria\"| is.na(family))"},{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"read-numbers-and-blanks","dir":"Articles","previous_headings":"Tutorial data processing","what":"Read numbers and blanks","title":"Tutorial data processing","text":"important initial quality control investigation read numbers per sample. add_total_count function add total read counts per sample sample table. can visualize distribution read counts using ggplot.  Unfortunately, one sample (bottom right corner) took lot reads sequencing run, decreasing sampling depth samples. Nevertheless, samples 1000 reads, consider worthwhile. Blanks low end spectrum general, according expectation, blanks quite reads requires investigation. Let’s look composition blanks. use filter_samples function generate tidytacos object blanks. tacoplot_stack function returns nice stacked bar plot visualization abundant taxa blanks.  Citrobacter suspiciously prevalent occurs multiple blanks! checking sequence, ASV one spiked samples many blanks determine absolute bacterial numbers relative abundances. Hence, case, high abundance Citrobacter blanks good thing. Besides Citrobacter none contaminants consistent read numbers blanks without spike exceed 1000 per sample, good signs quality data. still need set minimum read number sample needs included analyses. Samples really low read counts likely representative sampled microbiome poor amplification, contamination, /insufficient sequencing depth. Usually, minimum read number cut-quite arbitrary decision, hopefully somewhat informed nature data results blanks. case however, spiked samples several blanks can determine threshold actually informed amount contaminants blanks!","code":"leaf <- leaf%>%   add_total_count()  ggplot(leaf$samples, aes(x = log10(total_count), y = sample, color = Plant))+     geom_point() leaf1 <- leaf%>%   filter_samples(Plant == \"Blank\")  tacoplot_stack(leaf1)+   geom_text(size = 3, aes(y=-0.04, label = Plot))+   geom_text(size = 2.5, aes(y=-0.06, label = total_count))"},{"path":"https://lebeerlab.github.io/tidytacos/articles/data-processing.html","id":"absolute-abundances","dir":"Articles","previous_headings":"Tutorial data processing","what":"Absolute abundances","title":"Tutorial data processing","text":"added equal amounts spike taxon (Citrobacter) samples blanks. helps us calculate absolute abundances 16S gene copies per sample using function add_total_absolute_abundance. First need determine spike taxon_id. Using add_prevalence help us determine taxa present samples. comparing taxonomy /sequence information spike, can identify spike taxon_id, need add_total_absolute_abundance function.  see estimated biomass samples well estimated biomass blanks, good sign! like minimize chances 10% contamination samples, decided remove samples less 10x biomass mean biomass blanks. results tidytacos object without blanks without 2 samples low biomass considered sensitive contamination. excellent starting point start analyses.","code":"leaf <- leaf%>%   add_prevalence(relative = T)  head(leaf$taxa) ## # A tibble: 6 × 10 ##   kingdom  phylum     class order family genus species taxon taxon_id prevalence ##   <chr>    <chr>      <chr> <chr> <chr>  <chr> <chr>   <chr> <chr>         <dbl> ## 1 Bacteria Proteobac… Gamm… Ente… Enter… Citr… NA      TACG… t6           0.788  ## 2 Bacteria Proteobac… Gamm… Ente… Enter… Buch… NA      TACG… t8           0.0303 ## 3 Bacteria Proteobac… Beta… Burk… Oxalo… Mass… aurea/… TACG… t9           0.364  ## 4 Bacteria Proteobac… Gamm… Ente… Enter… Buch… NA      TACG… t11          0.0606 ## 5 Bacteria Proteobac… Alph… Sphi… Sphin… Sphi… NA      TACG… t12          0.515  ## 6 Bacteria Actinobac… Acti… Fran… Geode… Blas… NA      TACG… t14          0.485 leaf <- leaf%>%   add_total_absolute_abundance(spike_taxon = \"t6\", spike_added = added_spike_copies)  ggplot(leaf$samples, aes(x = Plant, y = log10(total_absolute_abundance)))+   geom_boxplot()+   geom_point() contaminants <- leaf$samples%>%   filter(Plant == \"Blank\")%>%   filter(!is.na(total_absolute_abundance))%>%   summarize(mean = mean(total_absolute_abundance))  leaf <- leaf%>%   mutate_samples(potential_contamination = contaminants$mean/total_absolute_abundance)%>%   filter_samples(potential_contamination < 0.1)  tacosum(leaf) ## n_samples    n_taxa   n_reads  ##        16      5536   2551543"},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"philosophy-of-the-package","dir":"Articles","previous_headings":"","what":"Philosophy of the package","title":"Tidytacos quick start guide","text":"tidytacos object simply list three tables: counts: counts reads taxon (OTU/ASV/phylotype) sample. row represents read count. samples: table contains sample metadata. row represents sample. taxa: table contains taxonomy metadata taxa. row represents taxon. package called tidytacos tables tidy: every row represents observation every column variable (data tidying can found https://r4ds.hadley.nz/data-tidy.html#sec-tidy-data). quick start guide, assume familiar tidyverse (especially dplyr ggplot). main differences popular phyloseq package : abundance table tidytacos long format, otu_table object phyloseq wide (matrix) format. tidy read count table compact sparse data (microbiome data), also easier handle visualize within tidyverse framework. tables tidytacos data frames (technically tibbles). phyloseq, table special data type (.e. classes “otu_table”, “tax_table” “sample_data”). makes sometimes difficult access data directly simple stuff . Also, otu_table tax_table classes based matrix type, sample_data class based dataframe type. also makes data manipulation sometimes un-straightforward. phyloseq otu table, sometimes rows taxa sometimes columns. can easily lead errors.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"Tidytacos quick start guide","text":"case haven’t installed tidytacos yet, can installed using devtools: guide, need load two packages: tidytacos (course) tidyverse set packages. first step usually conversion data usable tidytacos format. , example, used DADA2 explained , can hand data tidytacos using from_dada. can also convert phyloseq object tidytacos object using from_phyloseq function. options import convert data can found . tidytacos object read stored three sparse tables (counts-, taxa- samples.csv). read existing data folder called ‘my_data’ run: write data folder called “my_data_filtered” can run: However, example dataset available tidytacos package doesn’t need imported converted. called “urt” start inspecting samples table: quick look total number samples, ASVs, reads tidytacos object:","code":"install.packages(\"devtools\") devtools::install_github(\"LebeerLab/tidytacos\") library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(tidytacos) #>  #> Attaching package: 'tidytacos' #>  #> The following object is masked from 'package:dplyr': #>  #>     everything #>  #> The following object is masked from 'package:tidyr': #>  #>     everything taco <- read_tidytacos(\"/path/to/my_data\") taco %>% write_tidytacos(\"/path/to/my_data_filtered\") glimpse(urt$samples) #> Rows: 217 #> Columns: 9 #> $ run         <chr> \"20161207_ilke_urt100\", \"20161207_ilke_urt100\", \"20161207_… #> $ condition   <chr> \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"C… #> $ participant <chr> \"CON100\", \"CON100\", \"CON10\", \"CON10\", \"CON11\", \"CON11\", \"C… #> $ location    <chr> \"NF\", \"N\", \"NF\", \"NF\", \"NF\", \"N\", \"NF\", \"NF\", \"N\", \"NF\", \"… #> $ method      <chr> \"S\", \"S\", \"A\", \"S\", \"S\", \"S\", \"S\", \"S\", \"S\", \"S\", \"S\", \"S\"… #> $ plate       <dbl> 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ passes_qc   <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ sample      <chr> \"CON100-NF-S\", \"CON100-N-S\", \"CON10-NF-A\", \"CON10-NF-S\", \"… #> $ sample_id   <chr> \"s1\", \"s2\", \"s3\", \"s4\", \"s5\", \"s6\", \"s7\", \"s8\", \"s9\", \"s10… tacosum(urt) #> n_samples    n_taxa   n_reads  #>       217      1957   3873478"},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"making-a-stacked-barplot-of-a-subset-of-samples","dir":"Articles","previous_headings":"","what":"Making a stacked barplot of a subset of samples","title":"Tidytacos quick start guide","text":"can easily create plot explore subset samples (e.g., nose samples taken swab method) following way:  filter_samples function says: filtering samples. also delete taxa taxa table zero total reads remaining samples. tacoplot_stack function returns nice stacked bar plot visualization abundant taxa samples.","code":"urt %>%   filter_samples(location == \"N\", method == \"S\") %>%   tacoplot_stack()"},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"subsetting-dataset","dir":"Articles","previous_headings":"","what":"Subsetting dataset","title":"Tidytacos quick start guide","text":"next question dataset extent nose nasopharynx linked microbiological point view. get idea can first visualize :   First, make sure include swab samples. can visualize data stacked bar plots. tacoplot functions consist ggplot function calls therefore geoms ggplot features can added.","code":"urt_s <- urt %>% filter_samples(method == \"S\") tacoplot_stack(urt_s)+   geom_point(aes(y=-0.02,color=location)) tacoplot_stack(urt_s, x = location) +   facet_wrap(~ participant, nrow = 10) #> Warning in tacoplot_stack(urt_s, x = location): Sample labels not unique, #> samples are aggregated."},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"alpha-diversity","dir":"Articles","previous_headings":"","what":"Alpha diversity","title":"Tidytacos quick start guide","text":"explore alpha diversity, let’s create rarefied version dataset: can visualize alpha diversities nose versus nasopharynx: add_total_count function add total sample read numbers sample table. rarefy function randomly subsample samples n times. works read count sample equals exceeds n. determining ASV richness, chose rarefy first, may depend data. add_alpha function can used add several metrics alpha diversity sample table cas use add_alphas add currently supported metrics. Next plot resulting alpha diversities group per location sampling:  tacoplot_alphas function use alpha metric added add_alpha(s) can find sample table.","code":"urt_rar <- urt %>%   add_total_count() %>%   filter_samples(total_count >= 2000) %>%   rarefy(2000) %>%   add_alphas() urt_rar %>%   tacoplot_alphas(location) #> Warning: Removed 4 rows containing non-finite outside the scale range #> (`stat_ydensity()`). #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"principal-coordinates-analysis","dir":"Articles","previous_headings":"","what":"Principal coordinates analysis","title":"Tidytacos quick start guide","text":"like address differences nose nasopharynx. ’re also interested genera ASVs. PCA might offer insight: aggregate_taxa function merges rows taxa table together specified taxonomic level, case genus level. tidytacos functions, tables tidytacos object adjusted accordingly. tacoplot_ord_ly function determine relative abundances taxa samples, use Bray-Curtis dissimilarities ordinate samples 2-dimensional space based taxonomic composition. plotly “_ly” addition makes plot interactive, really nice exploratory work. also works plot functions.","code":"urt_genus <- urt %>%   filter_samples(method == \"S\") %>%   aggregate_taxa(rank = \"genus\")  tacoplot_ord_ly(urt_genus,location, samplenames = sample, dim = 3) #> Warning in remove_empty_samples(.): Removed 2 empty samples."},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"relation-between-community-composition-and-variables","dir":"Articles","previous_headings":"","what":"Relation between community composition and variables","title":"Tidytacos quick start guide","text":"logical next question extent niche (nose versus nasopharynx) determines community composition variability. Let’s forget everyone unique microbiome include variable “participant” model. perform_adonis function perform PERMutational ANOVA determine effect sample variables Bray-Curtis dissimilarities communities. result shows participant really important contributor community composition (R squared = 0.65). Furthermore, consistent significant differences communities nose nasopharynx (R squared = 0.06).","code":"perform_adonis(urt_genus, c(\"participant\", \"location\")) #> Permutation test for adonis under reduced model #> Terms added sequentially (first to last) #> Permutation: free #> Number of permutations: 999 #>  #> adonis2(formula = as.formula(paste(\"counts_matrix\", formula_RHS, sep = \" ~ \")), data = metadata, permutations = permutations) #>              Df SumOfSqs      R2      F Pr(>F)     #> participant  97   31.590 0.65236  1.916  0.001 *** #> location      1    3.066 0.06331 18.037  0.001 *** #> Residual     81   13.768 0.28432                   #> Total       179   48.424 1.00000                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://lebeerlab.github.io/tidytacos/articles/getting-started.html","id":"differential-abundance-analysis","dir":"Articles","previous_headings":"","what":"Differential abundance analysis","title":"Tidytacos quick start guide","text":"Next, like know 20 abundant genera, significantly abundant nasopharynx compared nose.  add_codifab function add table called taxon_pairs tidytacos object, pair taxon reference taxon, differential abundance taxon two conditions (respect reference taxon). codifab_plot function returns plot visualize differential abundance taxa conditions, compared taxa references. can observe Haemophilus likely typical Nasopharynx, whereas Anaerococcus likely typical nose. note, many differential abundance analysis methods none perfect. Interpret results care.","code":"urt_genus <- urt_genus %>% add_codifab(location, max_taxa = 40) #> Warning in infer_rank_names(ta): Not all default rank names found. Replacing them with: #>  c(\"kingdom\",\"phylum\",\"class\",\"order\",\"family\",\"genus\",\"taxon_name\",\"prevalence\") #>  #> If these are not the rank names of your taxon table in descending order,  #> please set them manually using 'set_rank_names()' urt_genus$taxon_pairs <- filter(urt_genus$taxon_pairs, wilcox_p < 0.05) tacoplot_codifab(urt_genus, NF_vs_N)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/network-analysis.html","id":"step-1-creating-a-network","dir":"Articles","previous_headings":"","what":"Step 1: Creating a network","title":"Network Analysis","text":"first step analysis creating sparcc network taxonomic counts. SpiecEasi package used.","code":"devtools::install_github('zdk123/SpiecEasi') #> Using github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT in .Renviron (or elsewhere) if you want to use the more secure git credential store instead. #> Skipping install of 'SpiecEasi' from a github remote, the SHA1 (5f396da8) has not changed since last install. #>   Use `force = TRUE` to force installation urt.net <- urt.nf %>%   network(     min_occurrence = 0.05, # the minimum percentage of samples that needs to have a taxa for it to be included in the network     iter=20, # number of iterations of the outer loop of sparcc      inner_iter=10, # number of iterations of the inner loop of sparcc     th=0.1, # correlations beneath this threshold are set to 0     taxon_name=taxon_name)  # The network object is a list with two elements: urt.net$Cor %>% head(2)# Correlation matrix #>             [,1]        [,2]         [,3]        [,4]       [,5]       [,6] #> [1,]  1.00000000 -0.02529089 -0.005801137  0.01516097 0.05986462 0.13709887 #> [2,] -0.02529089  1.00000000  0.030665238 -0.09163985 0.07760764 0.02597374 #>             [,7]        [,8]       [,9]       [,10]       [,11]       [,12] #> [1,]  0.03071816 -0.08361307 0.10603959 -0.01524706 -0.09335080 -0.01788330 #> [2,] -0.05482966 -0.07955803 0.04296975 -0.01357689  0.08080531  0.05173014 #>            [,13]       [,14]       [,15]       [,16]       [,17]       [,18] #> [1,] -0.01253595  0.03261072  0.01128624 -0.01741375 -0.01796809 0.308998423 #> [2,]  0.08546550 -0.03786864 -0.01991150 -0.03926070  0.02300305 0.006928278 #>            [,19]      [,20]        [,21]       [,22]      [,23]        [,24] #> [1,] -0.06816382 0.04028286 -0.007349141 -0.01681414 0.04898641 -0.006463706 #> [2,] -0.08602481 0.08172153 -0.005358079  0.15721554 0.04186287  0.010783317 #>            [,25]       [,26]        [,27]       [,28]       [,29]       [,30] #> [1,] -0.02932673 -0.04693648 -0.006408764 -0.08380906 -0.06849173 -0.09679495 #> [2,]  0.13554391 -0.10768510 -0.038097269  0.03864768  0.02522536  0.01495462 #>            [,31]      [,32]      [,33]       [,34]       [,35]       [,36] #> [1,] 0.006154588 0.05529007  0.1787906 -0.01988641 -0.05646627  0.02435975 #> [2,] 0.124082370 0.12098392 -0.0169648 -0.07313655 -0.05252636 -0.01685275 #>            [,37]       [,38]       [,39]       [,40]       [,41]        [,42] #> [1,]  0.05573063  0.27021927 -0.08233737  0.27717752  0.32687175 -0.020168237 #> [2,] -0.09939702 -0.04105809  0.10925131 -0.02920952 -0.04238792  0.004643286 #>            [,43]       [,44]       [,45]       [,46]       [,47]       [,48] #> [1,] -0.13372090 -0.02110049 -0.11099158 -0.01791130 -0.05660303 -0.04285631 #> [2,] -0.03572358  0.04358548 -0.06357924 -0.02876454 -0.05476827  0.01373997 #>            [,49]      [,50]      [,51]      [,52]       [,53]        [,54] #> [1,] -0.06429722 0.01189109 0.04833545 -0.0179242  0.01958685 -0.003913994 #> [2,] -0.01867380 0.09034714 0.01886988 -0.0573012 -0.01708747  0.026535551 #>             [,55]      [,56]        [,57]      [,58]      [,59]       [,60] #> [1,] -0.011371461 0.09608058  0.008814129 0.08724145 0.02541135  0.05272446 #> [2,]  0.001016776 0.03030416 -0.003755814 0.09917971 0.06309768 -0.02141835 #>            [,61]       [,62]       [,63]       [,64]       [,65]       [,66] #> [1,] 0.007878015 -0.07609307 -0.07515718 -0.08300833 -0.09037017  0.04006076 #> [2,] 0.072125421 -0.04605675 -0.09692066 -0.08869844  0.02120372 -0.06606351 #>            [,67]       [,68]       [,69]       [,70]       [,71]       [,72] #> [1,] -0.07315554 -0.02608547 -0.02595041 -0.12857806 -0.02958168 -0.05685777 #> [2,]  0.11404219 -0.01836244  0.01069843 -0.05887034  0.04082737  0.08911415 #>            [,73]       [,74]      [,75]       [,76]      [,77]       [,78] #> [1,] -0.02120009 0.015739045 0.03643760 0.006902477 0.01807948  0.14955167 #> [2,] -0.04430801 0.005226727 0.05359429 0.126778092 0.01243113 -0.09374607 #>           [,79]         [,80]      [,81]       [,82]        [,83]      [,84] #> [1,] 0.32421126 -0.0203249517 0.06744001 -0.04116257 -0.007734448 0.09769376 #> [2,] 0.01576832 -0.0002167615 0.01841182  0.09279505  0.021557648 0.15094090 #>            [,85]      [,86]        [,87]       [,88]       [,89]        [,90] #> [1,] -0.02065859 0.08824767 0.0002962855 -0.07892791 -0.01215166  0.023823958 #> [2,]  0.04044059 0.01583869 0.0379670151 -0.10003871 -0.01476276 -0.002405105 #>            [,91]       [,92]       [,93]       [,94]       [,95]       [,96] #> [1,]  0.02127067 -0.04943964 -0.03150189  0.01665404 -0.02428586 -0.03945849 #> [2,] -0.04528266  0.10176461 -0.05882543 -0.04453790  0.05828724 -0.05052593 #>            [,97]       [,98]        [,99]      [,100]      [,101]      [,102] #> [1,]  0.04364262 -0.02789056 -0.162288183 -0.06216937 -0.07105051 0.118253684 #> [2,] -0.01618929 -0.05109104 -0.007859769 -0.05034302 -0.14405057 0.001834282 #>           [,103]      [,104]     [,105]      [,106]      [,107]      [,108] #> [1,] -0.04045566 -0.03360512 -0.0701020 -0.04941166 -0.01169133  0.02423498 #> [2,] -0.00955543 -0.07275669 -0.0178108 -0.04841629 -0.10043112 -0.07519695 #>           [,109] #> [1,] -0.02405523 #> [2,] -0.04680215 # urt.net$Cov (covariance matrix) # urt.net$names (names of the taxa on x and y-axes)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/network-analysis.html","id":"step-2-filtering-the-network-matrix","dir":"Articles","previous_headings":"","what":"Step 2: Filtering the network matrix","title":"Network Analysis","text":"Next filter output correlation matrix remove weak correlations. use filter_network function, Matrix package dependency. also install igraph package, can used visualization network. remove weak correlations (set absolute value <=0.1) remove diagonal. handled filter_network function.","code":"install.packages(\"Matrix\") install.packages(\"igraph\") urt.net.filt <- urt.net %>% filter_network(threshold = 0.1)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/network-analysis.html","id":"step-3-clustering-of-the-network","dir":"Articles","previous_headings":"","what":"Step 3: Clustering of the network","title":"Network Analysis","text":"Now taxa network clustered using unsupervised clustering algorithm, Markov Cluster Algorithm (MCL). cluster_network function MCL package dependency. algorithm handle negative interactions correlation <0 set 0.  Using new clustered taxa (“eigentaxa”) can visualize clusters microbiome profile.  cluster c21 composition displayed.","code":"install.packages(\"MCL\") urt.net.clust <- urt.net.filt %>%    cluster_network(min_n=5, visualize=T) urt.net.clust %>%    group_by(cluster) %>%    summarize(n=n()) #> # A tibble: 5 × 2 #>   cluster     n #>   <chr>   <int> #> 1 c0         42 #> 2 c17         8 #> 3 c18         8 #> 4 c21        20 #> 5 c54        11 urt.nf$taxa <- urt.nf$taxa %>%    left_join(urt.net.clust, by=c(\"taxon_name\"=\"taxon\"))  urt.nf <- urt.nf %>%   add_taxon_name() %>%    mutate_taxa(cluster= ifelse(is.na(cluster), taxon_name, cluster)) %>%    set_rank_names(c(\"cluster\")) %>%    aggregate_taxa(rank=\"cluster\") urt.nf  %>% tacoplot_stack() urt.net.clust %>% filter(cluster == unique(urt.net.clust$cluster)[[4]]) #> # A tibble: 20 × 2 #>    taxon            cluster #>    <chr>            <chr>   #>  1 Alloprevotella 3 c21     #>  2 Campylobacter 2  c21     #>  3 Fusobacterium 5  c21     #>  4 Gemella          c21     #>  5 Granulicatella 1 c21     #>  6 Granulicatella 2 c21     #>  7 Haemophilus 3    c21     #>  8 Leptotrichia 1   c21     #>  9 Megasphaera 1    c21     #> 10 Neisseria 2      c21     #> 11 Neisseria 4      c21     #> 12 Prevotella_7 1   c21     #> 13 Streptococcus 3  c21     #> 14 Streptococcus 4  c21     #> 15 Streptococcus 5  c21     #> 16 Streptococcus 9  c21     #> 17 Veillonella 1    c21     #> 18 Veillonella 2    c21     #> 19 Veillonella 4    c21     #> 20 Veillonella 5    c21"},{"path":"https://lebeerlab.github.io/tidytacos/articles/stacked-barplot.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"Stacked Barplots","text":"need two packages: tidytacos (course) tidyverse set packages.","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(tidytacos) #>  #> Attaching package: 'tidytacos' #>  #> The following object is masked from 'package:dplyr': #>  #>     everything #>  #> The following object is masked from 'package:tidyr': #>  #>     everything"},{"path":"https://lebeerlab.github.io/tidytacos/articles/stacked-barplot.html","id":"making-a-stacked-barplot-of-a-subset-of-samples","dir":"Articles","previous_headings":"","what":"Making a stacked barplot of a subset of samples","title":"Stacked Barplots","text":"start selecting samples interesting : ones nose, taken swab method. can easily create explorative plots samples following ways:  tacoplot_stack function returns nice bar plot visualization abundant taxa samples. tacoplot_stack_ly function returns interactive version bar plot. order samples x-axis determined hierarchical clustering visualized sample composition. addition, functions things behind screens: Add relative abundances counts table. taxon, calculate mean relative abundance across samples taxon occurs. Give taxa human-understandable name taxon name unique. just genus name taxon, followed number make unique. Taxa higher mean relative abundance get smaller number. E.g. “Lactobacillus 1” Lactobacillus taxon largest mean relative abundance. Make new variable equal taxon name, except top-11 taxa retain name others changed “taxa”. visualization purposes; human eye can discriminate clearly 12 colors. new variables created hood, gone function execution finished (-called “side-effects”). Luckily, variables also exists function create keep ! functions following (names intended self-explanatory much possible): add_rel_abundance: adds counts table add_mean_rel_abundance: adds taxa table add_taxon_name: adds taxa table add_taxon_name_color: adds taxa table functions add extra variable one tables; explore parts vignette.","code":"urt_ns <- urt %>%   filter_samples(location == \"N\", method == \"S\") tacoplot_stack(urt_ns) tacoplot_stack_ly(urt_ns, x=sample)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/stacked-barplot.html","id":"making-a-facet-wrapped-stacked-barplot","dir":"Articles","previous_headings":"","what":"Making a facet wrapped stacked barplot","title":"Stacked Barplots","text":"two interesting types facet wrapped bar plots can make: facets fixed x-axis categories, facets without fixed x-axis categories. Facets fixed x-axis categories first type plot variable x-axis sample name (--informative default). want categories variable order subplots. example, subplot every participant, participant want see nose sample nasopharynx sample, order. achieved adding x = location extra argument barplot function, adding facet_wrap() layer. Putting x-axis categories order subplots default behaviour facet_wrap() function. Note order samples subplot now determined categories variable put (e.g. alphabetically sorted), longer sample clustering procedure!  Facets without fixed x-axis categories second type facet wrapped plot one sample names x-axis, usual, sorted according clustering procedure. example, want one facet per sampling location, samples belonging location. can achieved following way:  quite right. default behavior facet_wrap() repeat possible x-axis values facets, even information ! case, default behaviour put samples names nose facet nasopharynx facet, plot empty space sample name - sampling location combination doesn’t exist. Adding argument scales = \"free_x\" corrects behavior also makes sure samples plotted order clustering:","code":"urt_s <- urt%>%   filter_samples(method == \"S\")  tacoplot_stack(urt_s, x = location) +   facet_wrap(~ participant, nrow = 10) #> Warning in tacoplot_stack(urt_s, x = location): Sample labels not unique, #> samples are aggregated. tacoplot_stack(urt_s) +   facet_wrap(~ location, nrow = 2) tacoplot_stack(urt_s) +   facet_wrap(~ location, scales = \"free_x\", nrow = 2)"},{"path":"https://lebeerlab.github.io/tidytacos/articles/stacked-barplot.html","id":"plotting-only-a-subset-of-taxa-without-other-taxa","dir":"Articles","previous_headings":"","what":"Plotting only a subset of taxa, without “Other taxa”","title":"Stacked Barplots","text":"able , need number things hand normally happen “hood” tacoplot_stack() function: Step 1: add relative abundances. want calculated respect full samples, taxa ’re interested removed! Step 2: select taxa want (e.g. family Lactobacillaceae). Step 3: add variable “taxon_name_color”; variable equal “taxon_name”, except everything apart n abundant taxa (moment Lactobacillaceae!) called “taxa”. Step 4: make plot. Thanks %>% (pipe) operator magrittr package, can achieve using following elegant code:","code":"urt %>%   add_rel_abundance() %>%   filter_taxa(family == \"Lactobacillaceae\") %>%   add_taxon_name_color() %>%   tacoplot_stack()+     geom_point(aes(y=-0.01,color=location,shape=method))"},{"path":"https://lebeerlab.github.io/tidytacos/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stijn Wittouck. Author, maintainer. Tim Van Rillaer. Author. Wenke Smets. Author. Sarah sarah.lebeer@uantwerpen.Lebeer. Funder.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wittouck S, Van Rillaer T, Smets W (2024). tidytacos: Manipulate Taxonomic Composition Data Microbial Communities. R package version 1.0.0, https://lebeerlab.github.io/tidytacos/.","code":"@Manual{,   title = {tidytacos: Manipulate Taxonomic Composition Data of Microbial Communities},   author = {Stijn Wittouck and Tim {Van Rillaer} and Wenke Smets},   year = {2024},   note = {R package version 1.0.0},   url = {https://lebeerlab.github.io/tidytacos/}, }"},{"path":[]},{"path":"https://lebeerlab.github.io/tidytacos/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Manipulate Taxonomic Composition Data of Microbial Communities","text":"Tidytacos (tidy TAxonomic COmpositionS) R package exploration microbial community data. community data consists read counts generated amplicon sequencing (e.g. region 16S rRNA gene) metagenome (shotgun) sequencing. read count represents number sequencing reads identified taxon (ASV, OTU, species, higher-level taxon) sample. Tidytacos builds tidyverse created Hadley Wickham: data stored tidy tables row observation column variable. addition, package supplies set “verbs”: functions take tidytacos object first argument also return tidytacos object. makes easy construct “pipe chains” code represent series operations performed tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Manipulate Taxonomic Composition Data of Microbial Communities","text":"Tidytacos R package. can find instructions download install R . Tidytacos relies tidyverse R package (, accurately, set R packages). can install tidyverse running following R code: Finally, RStudio nice IDE work R code (well code scripting languages). lot features default R IDE allows: beyond creating saving scripts, also shows figures, allows navigate files, allows inspect tables etc. can download RStudio .","code":"install.packages(\"tidyverse\")"},{"path":"https://lebeerlab.github.io/tidytacos/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manipulate Taxonomic Composition Data of Microbial Communities","text":"Run following R code install latest version tidytacos:","code":"install.packages(\"devtools\") devtools::install_github(\"LebeerLab/tidytacos\")"},{"path":"https://lebeerlab.github.io/tidytacos/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Manipulate Taxonomic Composition Data of Microbial Communities","text":"documentation page (help page) available functions browser R. can view R running e.g. ?filter_samples. useful tutorials can found wiki.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_absolute_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add absolute abundances to count table — add_absolute_abundance","title":"Add absolute abundances to count table — add_absolute_abundance","text":"add_absolute_abundance calculates absolute abundances taxa samples given taxon spiked samples library prep. function adds absolute abundances count table tidytacos object column name \"absolute_abundance\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_absolute_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add absolute abundances to count table — add_absolute_abundance","text":"","code":"add_absolute_abundance(ta, spike_taxon, spike_added = spike_added)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_absolute_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add absolute abundances to count table — add_absolute_abundance","text":"ta tidytacos object. spike_taxon taxon id spike. spike_added column name sample table indicates much spike added per sample.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_absolute_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add absolute abundances to count table — add_absolute_abundance","text":"","code":"# Initiate count matrix x <- matrix(   c(1500, 1300, 14, 280, 356, 9),   ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\", \"taxon3\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,   taxa_are_columns = FALSE ) data$samples$spike_added <- c(100, 150)  # Add total abundance data <- data %>%   add_absolute_abundance(spike_taxon = \"t3\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Add alpha diversity measure — add_alpha","title":"Add alpha diversity measure — add_alpha","text":"add_alpha adds alpha diversity measures sample table tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add alpha diversity measure — add_alpha","text":"","code":"add_alpha(ta, method = \"invsimpson\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add alpha diversity measure — add_alpha","text":"ta tidytacos object. method diversity measure use, see diversity information .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add alpha diversity measure — add_alpha","text":"tidytacos object alpha diversity measure added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add alpha diversity measure — add_alpha","text":"function can add different alpha diversity measures sample table, specified method argument. following methods available: - invsimpson: Inverse Simpson index - shannon: Shannon index - simpson: Simpson index - pielou: Pielou's evenness index - obs: Observed richness - s.chao1: Chao1 richness estimator - s.ace: ACE richness estimator","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add alpha diversity measure — add_alpha","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Add alpha diversity measures data <- data %>%  add_alpha()  data <- data %>%   add_alpha(method=\"shannon\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":null,"dir":"Reference","previous_headings":"","what":"Add alpha diversity measures — add_alphas","title":"Add alpha diversity measures — add_alphas","text":"add_alpha adds selected alpha diversity measures sample table tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add alpha diversity measures — add_alphas","text":"","code":"add_alphas(ta, methods = \"all\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add alpha diversity measures — add_alphas","text":"ta tidytacos object. methods character vector diversity measure use, see add_alpha examples. Optionally use '' add diversity measures.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add alpha diversity measures — add_alphas","text":"tidytacos object selected alpha diversity measures added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add alpha diversity measures — add_alphas","text":"function can add multiple different alpha diversity measures sample table, specified methods argument.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_alphas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add alpha diversity measures — add_alphas","text":"","code":"urt_all_alphas <- urt %>% add_alphas() #> Warning: Removed 3 empty samples."},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_clr_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a centered log ratio transformation on the readcounts. — add_clr_abundance","title":"Perform a centered log ratio transformation on the readcounts. — add_clr_abundance","text":"add_clr_abundance calculates log ration transformed values taxon sample adds data new table, clr_counts. Alternatively, using 'overwrite', clr transformed data can replace 'counts' column count table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_clr_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a centered log ratio transformation on the readcounts. — add_clr_abundance","text":"","code":"add_clr_abundance(ta, overwrite = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_clr_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a centered log ratio transformation on the readcounts. — add_clr_abundance","text":"ta tidytacos object. overwrite Whether counts table overwritten transformed counts.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_clr_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a centered log ratio transformation on the readcounts. — add_clr_abundance","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_codifab.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform compositional differential abundance analysis — add_codifab","title":"Perform compositional differential abundance analysis — add_codifab","text":"function performs differential abundance test pairwise ratios taxa.Taxa relatively high number significantly different ratios, can considered abundant one condition versus .  tacoplot_codifab function allows better interpretation results.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_codifab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform compositional differential abundance analysis — add_codifab","text":"","code":"add_codifab(ta, condition, conditions = NULL, max_taxa = 30)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_codifab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform compositional differential abundance analysis — add_codifab","text":"ta tidytacos object. condition binary variable sample table (unquoted). conditions character vector exactly two categories condition variable. max_taxa maximum number taxa use.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_codifab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform compositional differential abundance analysis — add_codifab","text":"tidytacos object extra table taxon_pairs","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_codifab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform compositional differential abundance analysis — add_codifab","text":"table called taxon_pairs added tidytacos object, pair taxon reference taxon, differential abundance taxon two conditions (respect reference taxon). test performed Wilcoxon rank sum test test statistic reported two-sample Hodges–Lehmann estimator (median pairwise differences samples). possible supply conditions compare conditions argument. conditions two supplied removed data. method based principle introduced Aitchison \"statistical analysis compositional data.\" Journal Royal Statistical Society: Series B (Methodological) 44.2 (1982): 139-16","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_copca.html","id":null,"dir":"Reference","previous_headings":"","what":"Add compositional principal components to the sample table — add_copca","title":"Add compositional principal components to the sample table — add_copca","text":"add_copca performs principal components analysis adds first two principal components sample table column names \"pca_1\" \"pca_2\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_copca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add compositional principal components to the sample table — add_copca","text":"","code":"add_copca(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_copca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add compositional principal components to the sample table — add_copca","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_copca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add compositional principal components to the sample table — add_copca","text":"Note function uses 50 prevalant taxa unless add_logratio executed another value 'max_taxa'.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Add density to count table — add_density","title":"Add density to count table — add_density","text":"add_density adds densities (bacterial biomass per sample mass volume) count table tidytacos object column name \"density\". Can used taxon spiked samples library prep.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add density to count table — add_density","text":"","code":"add_density(   ta,   spike_taxon,   spike_added = spike_added,   material_sampled = material_sampled )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add density to count table — add_density","text":"ta tidytacos object. spike_taxon taxon id spike. spike_added column name sample table indicates much spike added per sample, e.g. 16S rRNA gene copy numbers added DNA extraction tube. material_sampled column name indicating amount material DNA extracted, e.g gram soil. parameter encourages researchers consider absolute abundances meaningful can translated densities.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add density to count table — add_density","text":"","code":"# Initiate count matrix x <- matrix(   c(1500, 1300, 14, 280, 356, 9),   ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\", \"taxon3\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,   taxa_are_columns = FALSE ) data$samples$spike_added <- c(100, 150) data$samples$grams_source <- c(4, 5)  # Add density data <- data %>%   add_density(spike_taxon = \"t3\", material_sampled=grams_source)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_eigentaxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates eigentaxa values based on SparCC - MCL generated clusters per sample. It is advised to run cluster_taxa on the tidyamplicons object before running this function to add the clusters if you want to stray from any default parameters. — add_eigentaxa","title":"Calculates eigentaxa values based on SparCC - MCL generated clusters per sample. It is advised to run cluster_taxa on the tidyamplicons object before running this function to add the clusters if you want to stray from any default parameters. — add_eigentaxa","text":"Calculates eigentaxa values based SparCC - MCL generated clusters per sample. advised run cluster_taxa tidyamplicons object running function add clusters want stray default parameters.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_eigentaxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates eigentaxa values based on SparCC - MCL generated clusters per sample. It is advised to run cluster_taxa on the tidyamplicons object before running this function to add the clusters if you want to stray from any default parameters. — add_eigentaxa","text":"","code":"add_eigentaxa(ta, taxon_name = taxon, sample_name = sample)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_eigentaxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates eigentaxa values based on SparCC - MCL generated clusters per sample. It is advised to run cluster_taxa on the tidyamplicons object before running this function to add the clusters if you want to stray from any default parameters. — add_eigentaxa","text":"ta tidytacos object. taxon_name Column name taxon identifier, default taxon. sample_name Column name sample identifier, default sample.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_jervis_bardy.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the taxon QC method of Jervis-Bardy — add_jervis_bardy","title":"Apply the taxon QC method of Jervis-Bardy — add_jervis_bardy","text":"add_jervis_bardy calculates spearman correlation relative abundance sample DNA concentration, taxon adds correlation metric p-value taxa table column names \"jb_cor\" \"jb_p\", respectively. taxa show distribution negatively correlated DNA concentration, indicates potential contaminants.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_jervis_bardy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the taxon QC method of Jervis-Bardy — add_jervis_bardy","text":"","code":"add_jervis_bardy(ta, dna_conc, sample_condition = T, min_pres = 3)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_jervis_bardy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the taxon QC method of Jervis-Bardy — add_jervis_bardy","text":"ta tidytacos object. dna_conc variable samples table contains dna concetrations (unquoted). sample_condition optional extra condition samples must pass calculations. min_pres minimum number samples taxon present correlation calculated.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_jervis_bardy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply the taxon QC method of Jervis-Bardy — add_jervis_bardy","text":"See: J. Jervis-Bardy et al., “Deriving accurate microbiota profiles human samples low bacterial content post-sequencing processing Illumina MiSeq data,” Microbiome, vol. 3, . 1, Art. . 1, 2015, doi: 10.1186/s40168-015-0083-8.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_logratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logratios — add_logratio","title":"Add logratios — add_logratio","text":"function computes pairwise logratio values taxa adds tidytacos object form table called logratios.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_logratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logratios — add_logratio","text":"","code":"add_logratio(ta, max_taxa = 50)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_logratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logratios — add_logratio","text":"ta tidytacos object. max_taxa maximum number taxa use.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_logratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logratios — add_logratio","text":"tidytacos object extra table logratios","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_logratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add logratios — add_logratio","text":"max_taxa smaller number taxa dataset, taxa highest prevalence selected. IMPORTANT: function adds pseudocounts one abundances calculating logratios.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_mean_rel_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add average relative abundances to taxa table — add_mean_rel_abundance","title":"Add average relative abundances to taxa table — add_mean_rel_abundance","text":"function adds mean relative abundance values taxon taxa table, overall per sample group.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_mean_rel_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add average relative abundances to taxa table — add_mean_rel_abundance","text":"","code":"add_mean_rel_abundance(ta, condition = NULL, test = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_mean_rel_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add average relative abundances to taxa table — add_mean_rel_abundance","text":"ta tidytacos object. condition condition variable (character). test Differential abundance test perform.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_mean_rel_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add average relative abundances to taxa table — add_mean_rel_abundance","text":"tidytacos object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_mean_rel_abundance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add average relative abundances to taxa table — add_mean_rel_abundance","text":"`condition` specified, mean relative abundances calculated separately group defined condition variable. variable present sample table. `condition` specified, differential abundance testing can performed setting `test` argument. Options NULL (default), \"wilcox\" \"t-test\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata to the tidytacos object — add_metadata","title":"Add metadata to the tidytacos object — add_metadata","text":"add_metadata adds sample taxon metadata sample taxon table, respectively, tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata to the tidytacos object — add_metadata","text":"","code":"add_metadata(ta, metadata, table_type = \"sample\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata to the tidytacos object — add_metadata","text":"ta tidytacos object. metadata tibble containing data sample taxon. Samples/taxa rows, metadata variables columns. least one column name needs shared sample taxa table tidytacos object. default shared column name 'sample' samples 'taxon' taxa. table_type type table add, either 'sample' 'taxa'.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata to the tidytacos object — add_metadata","text":"tidytacos object metadata added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add metadata to the tidytacos object — add_metadata","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Initiate sample tibble sample <- c(\"sample1\", \"sample2\") environment <- c(\"food fermentation\", \"human stool\") sample_tibble <- tibble::tibble(sample, environment)  # Add sample tibble to tidytacos object data <- data %>% add_metadata(sample_tibble) #> Joining with `by = join_by(sample)`  # Initiate taxon tibble genera <- c(\"Lactobacillus\",\"Limosilactobacillus\") species <- c(\"crispatus\",\"reuteri\") taxonomy <- tibble::tibble(taxon=rownames(x),genera,species)  # Add taxon tibble to tidytacos object data <- data %>%   add_metadata(taxonomy, table_type=\"taxa\")  #> Joining with `by = join_by(taxon)` #> Warning: Not all default rank names found. Replacing them with: #>  c(\"genera\",\"species\") #>  #> If these are not the rank names of your taxon table in descending order,  #> please set them manually using 'set_rank_names()'"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ordination — add_ord","title":"Add ordination — add_ord","text":"add_ord adds first n dimensions dimensionality reduction method performed given dissimilarity matrix new variables sample table tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ordination — add_ord","text":"","code":"add_ord(ta, distance = \"bray\", method = \"pcoa\", dims = 2, binary = FALSE, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ordination — add_ord","text":"ta tidytacos object. distance distance indices use, see vegdist. method ordination method use calculate coordinates. Choices \"pcoa\", \"tsne\", \"umap\". dims amount dimensions reduce dissimilarities . binary Perform presence/absence standardisation distance computation . ... Additional arguments pass ordination function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ordination — add_ord","text":"tidytacos object ordination coordinates added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add ordination — add_ord","text":"function calculates dissimilarities samples followed ordination analysis. add first n dimensions sample table tidytacos object named \"ord1\", \"ord2\", ... function also add relative abundances present using add_rel_abundance.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_ord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ordination — add_ord","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356, 456, 678),  ncol = 3 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\", \"sample3\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Add pcoa data <- data %>%  add_ord()  # The variances of the ordination dimensions can be accessed with data$ord_variances #> [1] 1.000000e+00 7.325738e-16 0.000000e+00"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Add taxon prevalences to the taxon table — add_prevalence","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"add_prevalence calculates taxon prevalences (overall per condition) adds taxa table column name \"prevalence\". Prevalence can expressed number samples taxon occurs ratio samples taxon occurs total amount samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"","code":"add_prevalence(ta, condition = NULL, relative = F, fisher_test = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"ta tidytacos object. condition categorical variable (string). relative Whether use relative occurrences. fisher_test Whether perform fisher test add p-values test taxa table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"'condition' specified, prevalences calculated separately group defined condition variable. variable present sample table. `condition` specified, differential prevalence testing can performed setting `fisher_test` argument. Options F (default) T. set T, significance differential prevalence added taxa table column name \"fisher_p\". Condition categorical variable present samples table. Supply condition string.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_prevalence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add taxon prevalences to the taxon table — add_prevalence","text":"","code":"# add prevalences of all taxa urtp <- urt %>% add_prevalence() urtp$taxa %>% dplyr::select(taxon_id, prevalence) #> # A tibble: 1,957 × 2 #>    taxon_id prevalence #>    <chr>         <int> #>  1 t1               86 #>  2 t2              207 #>  3 t3                7 #>  4 t4                5 #>  5 t5               16 #>  6 t6               22 #>  7 t7              155 #>  8 t8               25 #>  9 t9               24 #> 10 t10               1 #> # ℹ 1,947 more rows  # add prevalences and fisher test for location urtpf <- urt %>% add_prevalence(condition=\"location\", fisher_test=TRUE, relative=TRUE) urtpf$taxa %>% dplyr::select(taxon_id, prevalence_in_N, prevalence_in_NF, fisher_p) #> # A tibble: 1,957 × 4 #>    taxon_id prevalence_in_N prevalence_in_NF fisher_p #>    <chr>              <dbl>            <dbl>    <dbl> #>  1 t1                0.326           0.443    0.0885  #>  2 t2                0.988           0.931    0.0437  #>  3 t3                0.0233          0.0382   0.706   #>  4 t4                0.0233          0.0229   1       #>  5 t5                0.0581          0.0840   0.599   #>  6 t6                0.128           0.0840   0.359   #>  7 t7                0.814           0.649    0.0120  #>  8 t8                0.0465          0.160    0.00933 #>  9 t9                0.0349          0.160    0.00354 #> 10 t10               0               0.00763  1       #> # ℹ 1,947 more rows"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_rel_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relative abundances to count table — add_rel_abundance","title":"Add relative abundances to count table — add_rel_abundance","text":"add_rel_abundance calculates relative abundances taxa samples adds count table tidytacos object column name \"rel_abundance\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_rel_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relative abundances to count table — add_rel_abundance","text":"","code":"add_rel_abundance(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_rel_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relative abundances to count table — add_rel_abundance","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_rel_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add relative abundances to count table — add_rel_abundance","text":"","code":"# Initiate count matrix x <- matrix(   c(1500, 1300, 280, 356),   ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,   taxa_are_columns = FALSE )  # Add relative abundance data <- data %>% add_rel_abundance()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_sample_clustered.html","id":null,"dir":"Reference","previous_headings":"","what":"Add clustering-based sample order — add_sample_clustered","title":"Add clustering-based sample order — add_sample_clustered","text":"add_sample_clustered adds new variable defining sample order based hierarchical clustering samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_sample_clustered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add clustering-based sample order — add_sample_clustered","text":"","code":"add_sample_clustered(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_sample_clustered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add clustering-based sample order — add_sample_clustered","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_sample_clustered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add clustering-based sample order — add_sample_clustered","text":"function calculates Bray-Curtis distances samples followed hierarchical average linkage clustering samples. add new factor variable \"sample_clustered\" sample tibble tidytacos object. function useful one wants plot similar samples together.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_spike_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Add spike ratio — add_spike_ratio","title":"Add spike ratio — add_spike_ratio","text":"add_spike_ratio calculates ratio non-spike spike reads sample adds sample table name \"spike_ratio\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_spike_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add spike ratio — add_spike_ratio","text":"","code":"add_spike_ratio(ta, spike_taxon)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_spike_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add spike ratio — add_spike_ratio","text":"ta tidytacos object. spike_taxon taxon_id spike.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_spike_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add spike ratio — add_spike_ratio","text":"function useful DNA spike added prior sequencing based method described Smets et al., 2016. Without calculating absolute abundances, spike ratio allows compare absolute abundances sample. example, spike ration one sample twice another, absolute number sequenced strands time spiking one sample twice sample.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_spike_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add spike ratio — add_spike_ratio","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Add total abundance data <- data %>%  add_spike_ratio(spike_taxon = \"t1\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sensible taxon name to taxon table — add_taxon_name","title":"Add sensible taxon name to taxon table — add_taxon_name","text":"add_taxon_name creates sensible taxa names -default conditions- combining genus name number. number added one taxon genus. number indicates rank abundance, 1 indicating taxon highest mean relative abundance dataset, within genus. genus classification available next detailed taxonomic rank available used. sensible taxon name added taxon table column name \"taxon_name\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sensible taxon name to taxon table — add_taxon_name","text":"","code":"add_taxon_name(ta, method = \"mean_rel_abundance\", include_species = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sensible taxon name to taxon table — add_taxon_name","text":"ta tidytacos object. method method arrange taxon names. Currently mean_rel_abundance. include_species Whether include species name .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sensible taxon name to taxon table — add_taxon_name","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sensible taxon name to taxon table — add_taxon_name","text":"","code":"urt_g <- urt %>% add_taxon_name() # add the species name if present (which is often uncertain in amplicon data) urt_s <- urt %>% add_taxon_name(include_species = TRUE)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Add taxon color for visualization. — add_taxon_name_color","title":"Add taxon color for visualization. — add_taxon_name_color","text":"add_rel_abundance determines abundant taxa assigns color consistent color codes taxon visualizations. rank can supplied aggregate colors higher current rank.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add taxon color for visualization. — add_taxon_name_color","text":"","code":"add_taxon_name_color(   ta,   method = \"mean_rel_abundance\",   n = 12,   samples = NULL,   taxa = NULL,   rank = NULL )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add taxon color for visualization. — add_taxon_name_color","text":"ta tidytacos object. method method arrange taxon names. Currently mean_rel_abundance. n integer denoting amount abundant taxa display. Capacity 12. samples optional vector sample_id's interest. taxa optional vector taxon_id's interest. rank optional rank aggregate taxa .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add taxon color for visualization. — add_taxon_name_color","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_taxon_name_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add taxon color for visualization. — add_taxon_name_color","text":"","code":"# display the 5 most abundant taxa at genus lvl urt %>% add_taxon_name_color(n=5, rank='genus') %>% tacoplot_stack()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_absolute_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add total absolute abundances of samples — add_total_absolute_abundance","title":"Add total absolute abundances of samples — add_total_absolute_abundance","text":"add_total_absolute_abundance calculates total absolute abundances samples given spike taxon, adds sample table column name \"total_absolute_abundance\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_absolute_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add total absolute abundances of samples — add_total_absolute_abundance","text":"","code":"add_total_absolute_abundance(ta, spike_taxon, spike_added = spike_added)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_absolute_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add total absolute abundances of samples — add_total_absolute_abundance","text":"ta tidytacos object. spike_taxon taxon id spike. spike_added column name samples table indicates much spike added per sample, e.g. 16S rRNA gene copy numbers added DNA extraction tube.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_absolute_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add total absolute abundances of samples — add_total_absolute_abundance","text":"","code":"# Initiate count matrix x <- matrix(   c(1500, 1300, 14, 280, 356, 9),   ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\", \"taxon3\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,   taxa_are_columns = FALSE ) data$samples$spike_added <- c(100, 150)  # Add total abundance data <- data %>%   add_total_absolute_abundance(spike_taxon = \"t3\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Add total read count per sample — add_total_count","title":"Add total read count per sample — add_total_count","text":"add_total_count adds total read count per sample sample table tidytacos object variable name total_count.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add total read count per sample — add_total_count","text":"","code":"add_total_count(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add total read count per sample — add_total_count","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add total read count per sample — add_total_count","text":"tidytacos object total read count per sample added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add total read count per sample — add_total_count","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Add total counts data <- data %>%  add_total_count()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Add total densities of samples — add_total_density","title":"Add total densities of samples — add_total_density","text":"add_total_density adds total microbial density sample table tidytacos object column name \"total_density\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add total densities of samples — add_total_density","text":"","code":"add_total_density(   ta,   spike_taxon,   spike_added = spike_added,   material_sampled = material_sampled )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add total densities of samples — add_total_density","text":"ta tidytacos object. spike_taxon taxon id spike. spike_added column name samples table indicates much spike added per sample, e.g. 16S rRNA gene copy numbers added DNA extraction tube. material_sampled column name indicating amount material DNA extracted, e.g gram soil. parameter encourages researchers consider absolute abundances meaningful can translated densities.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/add_total_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add total densities of samples — add_total_density","text":"","code":"# Initiate count matrix x <- matrix(   c(1500, 1300, 14, 280, 356, 9),   ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\", \"taxon3\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,   taxa_are_columns = FALSE ) data$samples$spike_added <- c(100, 150) data$samples$material_sampled <- c(1, 5)  # Add total abundance data <- data %>%   add_total_density(spike_taxon = \"t3\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate samples with identical values for all metadata — aggregate_samples","title":"Aggregate samples with identical values for all metadata — aggregate_samples","text":"aggregate_samples merges sample content samples identical values columns sample table (except sample_id).","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate samples with identical values for all metadata — aggregate_samples","text":"","code":"aggregate_samples(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate samples with identical values for all metadata — aggregate_samples","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate samples with identical values for all metadata — aggregate_samples","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"two ways call function:","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"","code":"aggregate_taxa(ta, rank = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"ta tidytacos object. rank optional rank aggregate .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"* rank interested standard list, just supply argument. * , delete taxon variables except taxon_id ranks still interested prior calling function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/aggregate_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate taxa on a given taxonomic rank — aggregate_taxa","text":"","code":"urt %>% aggregate_taxa(rank = \"class\") #> $samples #> # A tibble: 217 × 9 #>    run    condition participant location method plate passes_qc sample sample_id #>    <chr>  <chr>     <chr>       <chr>    <chr>  <dbl> <lgl>     <chr>  <chr>     #>  1 20161… CON       CON100      NF       S          3 TRUE      CON10… s1        #>  2 20161… CON       CON100      N        S          3 TRUE      CON10… s2        #>  3 20161… CON       CON10       NF       A          1 TRUE      CON10… s3        #>  4 20161… CON       CON10       NF       S          1 TRUE      CON10… s4        #>  5 20161… CON       CON11       NF       S          1 TRUE      CON11… s5        #>  6 20161… CON       CON11       N        S          1 TRUE      CON11… s6        #>  7 20161… CON       CON12       NF       S          1 TRUE      CON12… s7        #>  8 20161… CON       CON13       NF       S          1 TRUE      CON13… s8        #>  9 20161… CON       CON13       N        S          1 TRUE      CON13… s9        #> 10 20161… CON       CON14       NF       S          1 TRUE      CON14… s10       #> # ℹ 207 more rows #>  #> $taxa #> # A tibble: 65 × 6 #>    kingdom  phylum         class                 taxon_id taxon_name       taxon #>    <chr>    <chr>          <chr>                 <chr>    <chr>            <chr> #>  1 Bacteria Firmicutes     Bacilli               t2       Bacilli          Baci… #>  2 Bacteria Actinobacteria Actinobacteria        t5       Actinobacteria   Acti… #>  3 Bacteria Proteobacteria Gammaproteobacteria   t1       Gammaproteobact… Gamm… #>  4 Bacteria Firmicutes     Clostridia            t6       Clostridia       Clos… #>  5 Bacteria Proteobacteria Betaproteobacteria    t3       Betaproteobacte… Beta… #>  6 Bacteria Fusobacteria   Fusobacteriia         t4       Fusobacteriia    Fuso… #>  7 Bacteria Firmicutes     Negativicutes         t7       Negativicutes    Nega… #>  8 Bacteria Bacteroidetes  Bacteroidia           t8       Bacteroidia      Bact… #>  9 Bacteria Proteobacteria Alphaproteobacteria   t9       Alphaproteobact… Alph… #> 10 Bacteria Proteobacteria Epsilonproteobacteria t11      Epsilonproteoba… Epsi… #> # ℹ 55 more rows #>  #> $counts #> # A tibble: 2,064 × 3 #>    taxon_id sample_id count #>    <chr>    <chr>     <dbl> #>  1 t1       s1           85 #>  2 t1       s10       15606 #>  3 t1       s100       1103 #>  4 t1       s102       2777 #>  5 t1       s103        282 #>  6 t1       s104        587 #>  7 t1       s105        376 #>  8 t1       s106        118 #>  9 t1       s107       1561 #> 10 t1       s108       1628 #> # ℹ 2,054 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"class\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\""},{"path":"https://lebeerlab.github.io/tidytacos/reference/as_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tidytacos object to phyloseq object — as_phyloseq","title":"Convert tidytacos object to phyloseq object — as_phyloseq","text":"as_phyloseq returns phyloseq object given tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/as_phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tidytacos object to phyloseq object — as_phyloseq","text":"","code":"as_phyloseq(ta, sample = sample, taxon = taxon_id)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/as_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tidytacos object to phyloseq object — as_phyloseq","text":"ta tidytacos object. sample sample names required phyloseq object. Default \"sample\" column sample table tidytacos object. taxon taxon names required phyloseq object. Default \"taxon_id\" column taxon table tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/as_phyloseq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert tidytacos object to phyloseq object — as_phyloseq","text":"function convert tidytacos object phyloseq object alternative processing using phyloseq package. convert phyloseq object tidytacos object use from_phyloseq.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/betas.html","id":null,"dir":"Reference","previous_headings":"","what":"Get beta diversity table — betas","title":"Get beta diversity table — betas","text":"betas returns tidy table beta diversity combination samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/betas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get beta diversity table — betas","text":"","code":"betas(ta, unique = T, method = \"bray\", binary = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/betas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get beta diversity table — betas","text":"ta tidytacos object. unique logical scalar. Avoid redundancy removing self sample comparisons keep one two pairwise comparisons? Default TRUE. method dissimilarity index. See vegdist options. Default \"bray\". binary logical scalar. Perform presence/absence standardization analysis. See vegdist. Default FALSE.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/betas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get beta diversity table — betas","text":"function calculates beta diversity using vegdist function Vegan. report one diversity estimate combination samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/betas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get beta diversity table — betas","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <-   create_tidytacos(x, taxa_are_columns = FALSE)  # Report numbers numbers <- data %>% betas()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Change sample IDs to a given expression — change_id_samples","title":"Change sample IDs to a given expression — change_id_samples","text":"Change sample IDs given expression","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change sample IDs to a given expression — change_id_samples","text":"","code":"change_id_samples(ta, sample_id_new)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change sample IDs to a given expression — change_id_samples","text":"ta tidytacos object. sample_id_new expression evaluates unique sample identifier.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Change taxon IDs to a given expression — change_id_taxa","title":"Change taxon IDs to a given expression — change_id_taxa","text":"Change taxon IDs given expression","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change taxon IDs to a given expression — change_id_taxa","text":"","code":"change_id_taxa(ta, taxon_id_new)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/change_id_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change taxon IDs to a given expression — change_id_taxa","text":"ta tidytacos object. taxon_id_new expression evaluates unique taxon identifier.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/classify_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"(Re)classify amplicon sequences — classify_taxa","title":"(Re)classify amplicon sequences — classify_taxa","text":"function requires DADA2 package installed.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/classify_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Re)classify amplicon sequences — classify_taxa","text":"","code":"classify_taxa(   ta,   refdb,   taxa = rep(T, times = length(taxon_id)),   ranks = \"default\",   sequence_var = \"sequence\",   multithread = T,   min_boot = 50,   n_ranks = 7 )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/classify_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Re)classify amplicon sequences — classify_taxa","text":"ta tidytacos object. refdb path DADA2-compatible reference database. taxa expression specifies taxa (re)classify. ranks vector specifies ranks (re)classify. sequence_var (quoted) name variable within taxa table contains (representative) sequences taxa. multithread boolean indicating whether use multiple threads. min_boot minimum bootstrap value taxonomy assignment. n_ranks number ranks present reference database.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/classify_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Re)classify amplicon sequences — classify_taxa","text":"updated tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/classify_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Re)classify amplicon sequences — classify_taxa","text":"function (re)classify either subset taxa, given variable present taxon table contains (representative) sequences taxa. Ranks can supplied named integer vector, names represent taxonomic ranks integers represent positions ranks taxonomy strings present reference database. Ranks can also supplied just character vector rank names; case, assumed database taxonomy string follows default order domain, phylum, class, order, family, genus, species. ranks supplied, taxa (re)classified default ranks.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs Markov Clustering on a sparcc network matrix generated by filter_network. and returns a tibble with clusters and taxon identifiers. Optionally, the network can be visualized. — cluster_network","title":"Performs Markov Clustering on a sparcc network matrix generated by filter_network. and returns a tibble with clusters and taxon identifiers. Optionally, the network can be visualized. — cluster_network","text":"Performs Markov Clustering sparcc network matrix generated filter_network. returns tibble clusters taxon identifiers. Optionally, network can visualized.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs Markov Clustering on a sparcc network matrix generated by filter_network. and returns a tibble with clusters and taxon identifiers. Optionally, the network can be visualized. — cluster_network","text":"","code":"cluster_network(network, min_n = 3, visualize = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs Markov Clustering on a sparcc network matrix generated by filter_network. and returns a tibble with clusters and taxon identifiers. Optionally, the network can be visualized. — cluster_network","text":"network network network matrix form. min_n minimum number taxa per cluster, smaller clusters filtered . visualize whether visualize network clusters .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Clusters samples into n clusters — cluster_samples","title":"Clusters samples into n clusters — cluster_samples","text":"cluster_samples clusters samples n clusters adds clusters new variable \"cluster\" sample table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clusters samples into n clusters — cluster_samples","text":"","code":"cluster_samples(ta, n_clusters)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clusters samples into n clusters — cluster_samples","text":"ta tidytacos object. n_clusters number desired clusters.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clusters samples into n clusters — cluster_samples","text":"tidytacos object cluster column samples table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clusters samples into n clusters — cluster_samples","text":"function calculates Bray-Curtis distance samples followed hierarchical average linkage clustering samples. user provides number desired clusters used assign samples . new variable named \"cluster\" added samples tibble tidytacos object defining cluster sample belongs.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clusters samples into n clusters — cluster_samples","text":"","code":"# Initiate count matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE                      )  # Add total abundance data <- data %>%  cluster_samples(n_clusters = 2)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs SparCC network analysis on a tidytacos object and then performs Markov Clustering on the network to annotate taxa of the largest clusters in the tidytacos object. — cluster_taxa","title":"Performs SparCC network analysis on a tidytacos object and then performs Markov Clustering on the network to annotate taxa of the largest clusters in the tidytacos object. — cluster_taxa","text":"Performs SparCC network analysis tidytacos object performs Markov Clustering network annotate taxa largest clusters tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs SparCC network analysis on a tidytacos object and then performs Markov Clustering on the network to annotate taxa of the largest clusters in the tidytacos object. — cluster_taxa","text":"","code":"cluster_taxa(   ta,   min_occurrence = 0.05,   network_thresh = 0.1,   min_n_cluster = 3,   taxon_name = taxon,   sample_name = sample )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/cluster_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs SparCC network analysis on a tidytacos object and then performs Markov Clustering on the network to annotate taxa of the largest clusters in the tidytacos object. — cluster_taxa","text":"ta tidytacos object. min_occurrence Percentage samples taxon needs present considered analysis. network_thresh absolute value correlations threshold filtered . min_n_cluster minimum number taxa per cluster, smaller clusters filtered . taxon_name unique name use taxa, default taxon_id used. sample_name unique name use samples, default sample_id used.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the count table — counts","title":"Extract the count table — counts","text":"Extract count table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the count table — counts","text":"","code":"counts(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the count table — counts","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a counts matrix — counts_matrix","title":"Return a counts matrix — counts_matrix","text":"function returns matrix taxon counts; rows samples columns taxa.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a counts matrix — counts_matrix","text":"","code":"counts_matrix(   ta,   sample_name = sample_id,   taxon_name = taxon_id,   value = count )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a counts matrix — counts_matrix","text":"ta tidytacos object. sample_name name variable sample table use row names (unquoted). taxon_name name variable taxon table use column names (unquoted). value name variable counts table use count","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a counts matrix — counts_matrix","text":"matrix count values.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert matrix with counts to tidy data frame — counts_tidy","title":"Convert matrix with counts to tidy data frame — counts_tidy","text":"counts_tidy returns tidy data frame given numerical counts matrix.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert matrix with counts to tidy data frame — counts_tidy","text":"","code":"counts_tidy(counts_matrix, taxa_are_columns = TRUE, value = \"counts\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert matrix with counts to tidy data frame — counts_tidy","text":"counts_matrix count matrix converted. taxa_are_columns logical scalar. taxa defined columns? Default TRUE. value Name resulting colum containing count data. Default \"counts\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/counts_tidy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert matrix with counts to tidy data frame — counts_tidy","text":"function convert numerical counts matrix tidy data frame. convert tidy data frame numerical counts matrix use counts_matrix.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/create_tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate tidytacos object — create_tidytacos","title":"Initiate tidytacos object — create_tidytacos","text":"tidytacos returns tidytacos object given numeric matrix.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/create_tidytacos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate tidytacos object — create_tidytacos","text":"","code":"create_tidytacos(counts_matrix, taxa_are_columns = TRUE)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/create_tidytacos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate tidytacos object — create_tidytacos","text":"counts_matrix Numerical matrix containing count data. taxa_are_columns logical scalar. taxa defined columns?","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/create_tidytacos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate tidytacos object — create_tidytacos","text":"function initiates tidytacos object based numeric matrix. automatically create dummy taxa table sample table need updated using function add_metadata. taxa table updated, rank names can set using function set_rank_names make tidytacos object aware taxonomy levels.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/create_tidytacos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initiate tidytacos object — create_tidytacos","text":"","code":"# Initiate count matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x,                      taxa_are_columns = FALSE) # Add taxonomy information taxonomy <- tibble::tibble(   taxon = c(\"taxon1\",\"taxon2\"),   domain = c(\"Bacteria\",\"Bacteria\"),   phylum = c(\"Bacillota\",\"Pseudomonadota\"),   class = c(\"Bacilli\",\"Gammaproteobacteria\"),   order = c(\"Lactobacillales\",\"Enterobacteriales\"),   family = c(\"Lactobacillaceae\",\"Enterobacteriaceae\"),   genus = c(\"Lactobacillus\",\"Escherichia\"),   species = c(\"Lactobacillus crispatus\",\"Escherichia coli\") )  data <- add_metadata(data, taxonomy, table_type=\"taxa\") #> Joining with `by = join_by(taxon)` #> Warning: Not all default rank names found. Replacing them with: #>  c(\"domain\",\"phylum\",\"class\",\"order\",\"family\",\"genus\",\"species\") #>  #> If these are not the rank names of your taxon table in descending order,  #> please set them manually using 'set_rank_names()' # rank names are inferred from the taxa table, but can be set manually # if we're not happy with the inferred rank names. data <- set_rank_names(data, c(\"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\"))"},{"path":"https://lebeerlab.github.io/tidytacos/reference/everything.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all data in one single table — everything","title":"Get all data in one single table — everything","text":"everything merges three tidytacos tables one large table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all data in one single table — everything","text":"","code":"everything(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all data in one single table — everything","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the counts — filter_counts","title":"Filter the counts — filter_counts","text":"Filter counts","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the counts — filter_counts","text":"","code":"filter_counts(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the counts — filter_counts","text":"ta tidytacos object. ... Filter criteria counts table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter the counts — filter_counts","text":"tidytacos object. # remove singletons urt <- urt","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters the output of network to a minimal threshold and transforms to matrix for downstream clustering or heatplot visualization. — filter_network","title":"Filters the output of network to a minimal threshold and transforms to matrix for downstream clustering or heatplot visualization. — filter_network","text":"Filters output network minimal threshold transforms matrix downstream clustering heatplot visualization.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the output of network to a minimal threshold and transforms to matrix for downstream clustering or heatplot visualization. — filter_network","text":"","code":"filter_network(network, threshold = 0.1, fdr = NULL, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the output of network to a minimal threshold and transforms to matrix for downstream clustering or heatplot visualization. — filter_network","text":"network network object generated network. threshold absolute value correlations threshold fdr threshold false discovery rate (pvalues calculated network) filtered . ... Extra arguments pass p.adjust function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the samples — filter_samples","title":"Filter the samples — filter_samples","text":"Filter samples","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the samples — filter_samples","text":"","code":"filter_samples(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the samples — filter_samples","text":"ta tidytacos object. ... Filter criteria samples table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter the samples — filter_samples","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter the samples — filter_samples","text":"","code":"# subset urt to keep only nasopharynx samples urt_nf <- urt %>% filter_samples(location == \"NF\") # subset urt to keep only samples from plate 1 and 2 urt_plate_1_2 <- urt %>% filter_samples(plate %in% c(1,2)) # subset the blanks in leaf leaf_blanks <- leaf %>% filter_samples(startsWith(description, \"BLANK\"))"},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the taxa — filter_taxa","title":"Filter the taxa — filter_taxa","text":"Filter taxa","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the taxa — filter_taxa","text":"","code":"filter_taxa(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the taxa — filter_taxa","text":"ta tidytacos object. ... Filter criteria taxa table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter the taxa — filter_taxa","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/filter_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter the taxa — filter_taxa","text":"","code":"# keep only bacterial reads leaf <- leaf %>% filter_taxa(kingdom == \"Bacteria\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_dada.html","id":null,"dir":"Reference","previous_headings":"","what":"DADA2 to a tidytacos object — from_dada","title":"DADA2 to a tidytacos object — from_dada","text":"from_dada returns tidytacos object given seqtab taxa object dada2.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_dada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DADA2 to a tidytacos object — from_dada","text":"","code":"from_dada(seqtab, taxa, taxa_are_columns = FALSE)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_dada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DADA2 to a tidytacos object — from_dada","text":"seqtab Sequence table, output dada2::makeSequenceTable. taxa Taxa table, output dada2::assignTaxonomy. taxa_are_columns logical scalar. taxa defined columns?","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_dada.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DADA2 to a tidytacos object — from_dada","text":"function convert two dada2 objects files tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert phyloseq object to tidytacos object — from_phyloseq","title":"Convert phyloseq object to tidytacos object — from_phyloseq","text":"from_phyloseq returns tidytacos object given phyloseq object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert phyloseq object to tidytacos object — from_phyloseq","text":"","code":"from_phyloseq(ps)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert phyloseq object to tidytacos object — from_phyloseq","text":"ps Phyloseq object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/from_phyloseq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert phyloseq object to tidytacos object — from_phyloseq","text":"function convert phyloseq object tidytacos object. convert tidytacos object phyloseq object use as_phyloseq.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/leaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylosphere samples — leaf","title":"Phylosphere samples — leaf","text":"Plant microbiome samples phylosphere, taken paper Smets et al.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/leaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylosphere samples — leaf","text":"","code":"leaf"},{"path":"https://lebeerlab.github.io/tidytacos/reference/leaf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylosphere samples — leaf","text":"## `leaf` tidytacos object 6,044 taxa 33 samples: Plant plant species (Blank/Mustard/Wheat) Plot location plant blank Day day sampling added_spike_copies amount spike sequences added","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/leaf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phylosphere samples — leaf","text":"<https://www.sciencedirect.com/science/article/pii/S003807171600050X>","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/make_tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidytacos object from three tidy tables — make_tidytacos","title":"Create a tidytacos object from three tidy tables — make_tidytacos","text":"Create tidytacos object three tidy tables","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/make_tidytacos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidytacos object from three tidy tables — make_tidytacos","text":"","code":"make_tidytacos(   samples,   taxa,   counts,   sample_name = sample,   taxon_name = sequence )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/make_tidytacos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tidytacos object from three tidy tables — make_tidytacos","text":"samples tidy table containing sample information. taxa tidy table containing taxon information. counts tidy table, row represents counts taxon sample. sample_name column sample table contains unique identifier sample. taxon_name column taxon table contains unique identifier taxon.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mean_rel_abundances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mean relative abundances of taxa in general or per condition — mean_rel_abundances","title":"Get mean relative abundances of taxa in general or per condition — mean_rel_abundances","text":"Returns tidy table average relatively abundances taxa, overall per condition.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mean_rel_abundances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mean relative abundances of taxa in general or per condition — mean_rel_abundances","text":"","code":"mean_rel_abundances(ta, condition = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/mean_rel_abundances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mean relative abundances of taxa in general or per condition — mean_rel_abundances","text":"ta tidytacos object. condition string representing categorical variable compute relative abundances every option variable","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mean_rel_abundances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get mean relative abundances of taxa in general or per condition — mean_rel_abundances","text":"Condition categorical variable present samples table. Supply condition string.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/merge_tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two tidytacos objects — merge_tidytacos","title":"Merge two tidytacos objects — merge_tidytacos","text":"merge_tidytacos merges two tidytacos objects returns one single tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/merge_tidytacos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two tidytacos objects — merge_tidytacos","text":"","code":"merge_tidytacos(ta1, ta2, taxon_identifier = sequence)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/merge_tidytacos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two tidytacos objects — merge_tidytacos","text":"ta1 first tidytacos object. ta2 second tidytacos object. taxon_identifier column name taxa tables identify unique taxa. Default sequence.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/merge_tidytacos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge two tidytacos objects — merge_tidytacos","text":"function merge two tidytacos objects one. useful one wants merge data obtained different sequencing runs. Therefore, function requires tidytacos objects contain \"run\" variable samples table, indicating origin.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create extra variables in the count table — mutate_counts","title":"Create extra variables in the count table — mutate_counts","text":"Create extra variables count table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create extra variables in the count table — mutate_counts","text":"","code":"mutate_counts(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create extra variables in the count table — mutate_counts","text":"ta tidytacos object. ... Mutate criteria counts table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create extra variables in the count table — mutate_counts","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create extra variables in the count table — mutate_counts","text":"","code":"# add a column to the counts table urt %>% mutate_counts(cl10 = log10(count)) #> $samples #> # A tibble: 217 × 9 #>    run    condition participant location method plate passes_qc sample sample_id #>    <chr>  <chr>     <chr>       <chr>    <chr>  <dbl> <lgl>     <chr>  <chr>     #>  1 20161… CON       CON100      NF       S          3 TRUE      CON10… s1        #>  2 20161… CON       CON100      N        S          3 TRUE      CON10… s2        #>  3 20161… CON       CON10       NF       A          1 TRUE      CON10… s3        #>  4 20161… CON       CON10       NF       S          1 TRUE      CON10… s4        #>  5 20161… CON       CON11       NF       S          1 TRUE      CON11… s5        #>  6 20161… CON       CON11       N        S          1 TRUE      CON11… s6        #>  7 20161… CON       CON12       NF       S          1 TRUE      CON12… s7        #>  8 20161… CON       CON13       NF       S          1 TRUE      CON13… s8        #>  9 20161… CON       CON13       N        S          1 TRUE      CON13… s9        #> 10 20161… CON       CON14       NF       S          1 TRUE      CON14… s10       #> # ℹ 207 more rows #>  #> $taxa #> # A tibble: 1,957 × 10 #>    taxon       kingdom phylum class order family genus species sequence taxon_id #>    <chr>       <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>    <chr>    #>  1 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… catarr… TACAGAG… t1       #>  2 TACGTAGGTG… Bacter… Firmi… Baci… Baci… Staph… Stap… aureus… TACGTAG… t2       #>  3 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… porci   TACAGAG… t3       #>  4 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… bovis/… TACAGAG… t4       #>  5 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… mening… TACGTAG… t5       #>  6 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… canife… TACGTAT… t6       #>  7 TACGTAGGGT… Bacter… Actin… Acti… Cory… Coryn… Cory… accole… TACGTAG… t7       #>  8 TACGGAGGGT… Bacter… Prote… Gamm… Past… Paste… Haem… haemol… TACGGAG… t8       #>  9 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… nuclea… TACGTAT… t9       #> 10 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… lactam… TACGTAG… t10      #> # ℹ 1,947 more rows #>  #> $counts #> # A tibble: 7,693 × 4 #>    count sample_id taxon_id  cl10 #>    <dbl> <chr>     <chr>    <dbl> #>  1 13473 s1        t7        4.13 #>  2 10322 s2        t7        4.01 #>  3    86 s4        t7        1.93 #>  4 19770 s5        t7        4.30 #>  5 28209 s6        t7        4.45 #>  6   416 s7        t7        2.62 #>  7  9508 s8        t7        3.98 #>  8 31623 s9        t7        4.50 #>  9   130 s10       t7        2.11 #> 10   922 s11       t7        2.96 #> # ℹ 7,683 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"class\"   \"order\"   \"family\"  \"genus\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create extra variables in the sample table — mutate_samples","title":"Create extra variables in the sample table — mutate_samples","text":"Create extra variables sample table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create extra variables in the sample table — mutate_samples","text":"","code":"mutate_samples(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create extra variables in the sample table — mutate_samples","text":"ta tidytacos object. ... Mutate criteria samples table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create extra variables in the sample table — mutate_samples","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create extra variables in the sample table — mutate_samples","text":"","code":"# change the sample column to lowercase urt <- urt %>% mutate_samples(sample = tolower(sample))"},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create extra variables in the taxa table — mutate_taxa","title":"Create extra variables in the taxa table — mutate_taxa","text":"Create extra variables taxa table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create extra variables in the taxa table — mutate_taxa","text":"","code":"mutate_taxa(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create extra variables in the taxa table — mutate_taxa","text":"ta tidytacos object. ... Mutate criteria taxa table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create extra variables in the taxa table — mutate_taxa","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/mutate_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create extra variables in the taxa table — mutate_taxa","text":"","code":"urt <- urt %>% mutate_taxa(species = paste(genus, species))"},{"path":"https://lebeerlab.github.io/tidytacos/reference/network.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform network inference with SparCC on a tidytacos object, after dropping rare taxa. See sparcc. — network","title":"Perform network inference with SparCC on a tidytacos object, after dropping rare taxa. See sparcc. — network","text":"Perform network inference SparCC tidytacos object, dropping rare taxa. See sparcc.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform network inference with SparCC on a tidytacos object, after dropping rare taxa. See sparcc. — network","text":"","code":"network(   ta,   min_occurrence = 0.05,   taxon_name = taxon,   sample_name = sample,   calculate_p = FALSE,   ... )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform network inference with SparCC on a tidytacos object, after dropping rare taxa. See sparcc. — network","text":"ta tidytacos object min_occurrence Percentage samples taxon needs present considered analysis. taxon_name Column name taxon identifier, default taxon. sample_name Column name sample identifier, default sample. considered zero inner SparCC loop. calculate_p whether calculate p-values . can time consuming due many iterations needed. Iterations can set R parameter multiple cores ncpus. ... Arguments passed SpiecEasi::sparcc data Community count data matrix iter Number iterations outer loop inner_iter Number iterations inner loop th absolute value correlations threshold considered zero inner SparCC loop.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_adonis.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an adonis test — perform_adonis","title":"Perform an adonis test — perform_adonis","text":"function executes adonis2 function vegan package returns result.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_adonis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an adonis test — perform_adonis","text":"","code":"perform_adonis(ta, predictors, permutations = 999, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_adonis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an adonis test — perform_adonis","text":"ta tidytacos object. predictors character vector predictors include model. permutations number permutations (permutations takes longer gives accurate p-value). ... Additional arguments pass adonis2 function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_adonis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform an adonis test — perform_adonis","text":"object class \"adonis\" (see adonis).","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_adonis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform an adonis test — perform_adonis","text":"Samples one predictors NA removed.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_anosim.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform anosim test — perform_anosim","title":"Perform anosim test — perform_anosim","text":"perform_anosim performs anosim test statistical difference groups samples. null hypothesis difference microbial communities groups samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_anosim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform anosim test — perform_anosim","text":"","code":"perform_anosim(ta, group, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_anosim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform anosim test — perform_anosim","text":"ta tidytacos object. group column sample table group samples . ... Arguments passed vegan::anosim x Data matrix data frame rows samples     columns response variable(s), dissimilarity object     symmetric square matrix dissimilarities. grouping Factor grouping observations. permutations list control values permutations     returned function ,     number permutations required, permutation matrix     row gives permuted indices. distance Choice distance metric measures     dissimilarity two observations. See vegdist     options.  used x dissimilarity     structure symmetric square matrix. strata integer vector factor specifying strata     permutation. supplied, observations permuted within     specified strata. parallel Number parallel processes predefined socket     cluster.  parallel = 1 uses ordinary, non-parallel     processing. parallel processing done parallel     package.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_mantel_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the correlation between the distance of the counts in a tidytacos object and a sample variable, multiple sample variables or another matrix. — perform_mantel_test","title":"Determine the correlation between the distance of the counts in a tidytacos object and a sample variable, multiple sample variables or another matrix. — perform_mantel_test","text":"function performs mantel test using dissimilarity matrix tidytacos object supplied second distance matrix generated user input.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_mantel_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the correlation between the distance of the counts in a tidytacos object and a sample variable, multiple sample variables or another matrix. — perform_mantel_test","text":"","code":"perform_mantel_test(ta, comparison, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_mantel_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the correlation between the distance of the counts in a tidytacos object and a sample variable, multiple sample variables or another matrix. — perform_mantel_test","text":"ta tidytacos object. comparison distance compare . can following: - name variable sample table use comparison - list names variables sample table. - distance matrix. ... Additional arguments pass mantel function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/perform_mantel_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the correlation between the distance of the counts in a tidytacos object and a sample variable, multiple sample variables or another matrix. — perform_mantel_test","text":"mantel test statistics","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lebeerlab.github.io/tidytacos/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/prevalences.html","id":null,"dir":"Reference","previous_headings":"","what":"Get prevalences of taxa in general or per condition — prevalences","title":"Get prevalences of taxa in general or per condition — prevalences","text":"Returns tidy table prevalences: taxon presence counts samples, overall per condition.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/prevalences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get prevalences of taxa in general or per condition — prevalences","text":"","code":"prevalences(ta, condition = NULL, pres_abs = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/prevalences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get prevalences of taxa in general or per condition — prevalences","text":"ta tidytacos object. condition string denoting categorical variable sample table. pres_abs Whether resort presence/absence screening.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/prevalences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get prevalences of taxa in general or per condition — prevalences","text":"Condition categorical variable present samples table. Supply condition string.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rank_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Return rank names associated with a tidytacos object if these are defined. In case of undefined rank names, the function returns the taxon_id field. — rank_names","title":"Return rank names associated with a tidytacos object if these are defined. In case of undefined rank names, the function returns the taxon_id field. — rank_names","text":"Return rank names associated tidytacos object defined. case undefined rank names, function returns taxon_id field.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rank_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return rank names associated with a tidytacos object if these are defined. In case of undefined rank names, the function returns the taxon_id field. — rank_names","text":"","code":"rank_names(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/rank_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return rank names associated with a tidytacos object if these are defined. In case of undefined rank names, the function returns the taxon_id field. — rank_names","text":"ta tidytacos object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rarefy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy the samples to a given number of reads — rarefy","title":"Rarefy the samples to a given number of reads — rarefy","text":"function performs rarefying. Make sure samples contain least minimum number reads; otherwise, error might thrown.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rarefy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy the samples to a given number of reads — rarefy","text":"","code":"rarefy(ta, n, replace = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/rarefy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy the samples to a given number of reads — rarefy","text":"ta tidytacos object. n Subsample size rarefying community. replace Whether replace read selected subsample can sampled . Default FALSE.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rarefy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefy the samples to a given number of reads — rarefy","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rarefy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy the samples to a given number of reads — rarefy","text":"","code":"# discard samples with less than 1000 reads urt_1000 <- urt %>%    add_total_count() %>%    filter_samples(total_count >= 1000)  # then rarefy to 1000 reads urt_1000 <- urt_1000 %>% rarefy(1000)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/read_tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"Read community data written by tidytacos — read_tidytacos","title":"Read community data written by tidytacos — read_tidytacos","text":"Read community data written tidytacos","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/read_tidytacos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read community data written by tidytacos — read_tidytacos","text":"","code":"read_tidytacos(   din,   samples = \"samples.csv\",   taxa = \"taxa.csv\",   counts = \"counts.csv\" )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/read_tidytacos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read community data written by tidytacos — read_tidytacos","text":"din directory containing sample, taxa counts table csv format samples name samples table, defaults samples.csv taxa name taxa table, defaults taxa.csv counts name counts table, defaults counts.csv","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rel_abundance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a relative abundance matrix — rel_abundance_matrix","title":"Return a relative abundance matrix — rel_abundance_matrix","text":"function returns relative abundance matrix; rows samples column taxa.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rel_abundance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a relative abundance matrix — rel_abundance_matrix","text":"","code":"rel_abundance_matrix(ta, sample_name = sample_id, taxon_name = taxon_id)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/rel_abundance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a relative abundance matrix — rel_abundance_matrix","text":"ta tidytacos object. sample_name name variable sample table use row names (unquoted). taxon_name name variable taxon table use column names (unquoted).","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/rel_abundance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a relative abundance matrix — rel_abundance_matrix","text":"matrix abundance values.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/remove_empty_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes empty samples from the tidytacos object — remove_empty_samples","title":"Removes empty samples from the tidytacos object — remove_empty_samples","text":"Removes empty samples tidytacos object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/remove_empty_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes empty samples from the tidytacos object — remove_empty_samples","text":"","code":"remove_empty_samples(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/remove_empty_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes empty samples from the tidytacos object — remove_empty_samples","text":"ta tidytacos object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/remove_empty_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes empty samples from the tidytacos object — remove_empty_samples","text":"tidytacos object minus empty samples","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/reset_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the taxon and sample IDs — reset_ids","title":"Reset the taxon and sample IDs — reset_ids","text":"Reset taxon sample IDs","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/reset_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the taxon and sample IDs — reset_ids","text":"","code":"reset_ids(ta, keep_prev = F)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/reset_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the taxon and sample IDs — reset_ids","text":"ta tidytacos object. keep_prev logical scalar. previous IDs kept column called taxon_id_prev?","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the sample table — samples","title":"Extract the sample table — samples","text":"Extract sample table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the sample table — samples","text":"","code":"samples(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the sample table — samples","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain or remove a set of count variables — select_counts","title":"Retain or remove a set of count variables — select_counts","text":"Retain remove set count variables","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain or remove a set of count variables — select_counts","text":"","code":"select_counts(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain or remove a set of count variables — select_counts","text":"ta tidytacos object. ... Selection criteria counts table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain or remove a set of count variables — select_counts","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain or remove a set of count variables — select_counts","text":"","code":"# add a column to the counts table leaf_ab <- leaf %>% add_rel_abundance() # remove that column again leaf_ab %>% select_counts(-rel_abundance) #> $samples #> # A tibble: 33 × 13 #>    sample description     Plant Spraydate Plot  Samplingdate Timepoint   Day #>    <chr>  <chr>           <chr> <chr>     <chr> <date>           <dbl> <dbl> #>  1 S224   BLANK-0-KIT1    Blank NA        KIT1  NA                  NA    NA #>  2 S84    BLANK-1-S-KIT1  Blank NA        KIT1  NA                  NA    NA #>  3 S220   BLANK-10-S-KIT3 Blank NA        KIT3  NA                  NA    NA #>  4 S40    BLANK-2-KIT1    Blank NA        KIT1  NA                  NA    NA #>  5 S89    BLANK-3-S-KIT1  Blank NA        KIT1  NA                  NA    NA #>  6 S22    BLANK-4-S-KIT1  Blank NA        KIT1  NA                  NA    NA #>  7 S35    BLANK-5-S-KIT2  Blank NA        KIT2  NA                  NA    NA #>  8 S98    BLANK-6-KIT2    Blank NA        KIT2  NA                  NA    NA #>  9 S124   BLANK-7-S-KIT2  Blank NA        KIT2  NA                  NA    NA #> 10 S189   BLANK-7b-S-KIT2 Blank NA        KIT2  NA                  NA    NA #> # ℹ 23 more rows #> # ℹ 5 more variables: Leafweight <dbl>, Square <chr>, Treatment <chr>, #> #   added_spike_copies <dbl>, sample_id <chr> #>  #> $taxa #> # A tibble: 6,054 × 9 #>    kingdom  phylum         class       order family genus species taxon taxon_id #>    <chr>    <chr>          <chr>       <chr> <chr>  <chr> <chr>   <chr> <chr>    #>  1 Eukarya  Streptophyta   eudicotyle… core… Convo… Cusc… NA      TACA… t1       #>  2 Eukarya  Streptophyta   Liliopsida  Poal… Poace… Agro… NA      GACA… t2       #>  3 Eukarya  Streptophyta   Liliopsida  NA    NA     NA    NA      GACG… t3       #>  4 Eukarya  Streptophyta   eudicotyle… core… Brass… Bras… napus   AACG… t4       #>  5 Eukarya  Streptophyta   eudicotyle… core… Convo… Cusc… NA      TACA… t5       #>  6 Bacteria Proteobacteria Gammaprote… Ente… Enter… Citr… NA      TACG… t6       #>  7 Eukarya  Streptophyta   eudicotyle… core… Convo… Cusc… NA      GACA… t7       #>  8 Bacteria Proteobacteria Gammaprote… Ente… Enter… Buch… NA      TACG… t8       #>  9 Bacteria Proteobacteria Betaproteo… Burk… Oxalo… Mass… aurea/… TACG… t9       #> 10 Eukarya  Oomycota       Oomycetes   Pyth… Pythi… Pyth… NA      TACG… t10      #> # ℹ 6,044 more rows #>  #> $counts #> # A tibble: 9,191 × 3 #>    count sample_id taxon_id #>    <dbl> <chr>     <chr>    #>  1    15 s1        t1       #>  2    34 s2        t1       #>  3    14 s3        t1       #>  4    20 s4        t1       #>  5    12 s5        t1       #>  6    11 s6        t1       #>  7    17 s7        t1       #>  8    51 s8        t1       #>  9    29 s9        t1       #> 10    33 s10       t1       #> # ℹ 9,181 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"order\"   \"class\"   \"family\"  \"genus\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain or remove a set of sample variables — select_samples","title":"Retain or remove a set of sample variables — select_samples","text":"Retain remove set sample variables","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain or remove a set of sample variables — select_samples","text":"","code":"select_samples(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain or remove a set of sample variables — select_samples","text":"ta tidytacos object. ... Selection criteria samples table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain or remove a set of sample variables — select_samples","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain or remove a set of sample variables — select_samples","text":"","code":"# remove the condition column from the samples table urt %>% select_samples(-condition) #> $samples #> # A tibble: 217 × 8 #>    run              participant location method plate passes_qc sample sample_id #>    <chr>            <chr>       <chr>    <chr>  <dbl> <lgl>     <chr>  <chr>     #>  1 20161207_ilke_u… CON100      NF       S          3 TRUE      CON10… s1        #>  2 20161207_ilke_u… CON100      N        S          3 TRUE      CON10… s2        #>  3 20161207_ilke_u… CON10       NF       A          1 TRUE      CON10… s3        #>  4 20161207_ilke_u… CON10       NF       S          1 TRUE      CON10… s4        #>  5 20161207_ilke_u… CON11       NF       S          1 TRUE      CON11… s5        #>  6 20161207_ilke_u… CON11       N        S          1 TRUE      CON11… s6        #>  7 20161207_ilke_u… CON12       NF       S          1 TRUE      CON12… s7        #>  8 20161207_ilke_u… CON13       NF       S          1 TRUE      CON13… s8        #>  9 20161207_ilke_u… CON13       N        S          1 TRUE      CON13… s9        #> 10 20161207_ilke_u… CON14       NF       S          1 TRUE      CON14… s10       #> # ℹ 207 more rows #>  #> $taxa #> # A tibble: 1,957 × 10 #>    taxon       kingdom phylum class order family genus species sequence taxon_id #>    <chr>       <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>    <chr>    #>  1 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… catarr… TACAGAG… t1       #>  2 TACGTAGGTG… Bacter… Firmi… Baci… Baci… Staph… Stap… aureus… TACGTAG… t2       #>  3 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… porci   TACAGAG… t3       #>  4 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… bovis/… TACAGAG… t4       #>  5 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… mening… TACGTAG… t5       #>  6 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… canife… TACGTAT… t6       #>  7 TACGTAGGGT… Bacter… Actin… Acti… Cory… Coryn… Cory… accole… TACGTAG… t7       #>  8 TACGGAGGGT… Bacter… Prote… Gamm… Past… Paste… Haem… haemol… TACGGAG… t8       #>  9 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… nuclea… TACGTAT… t9       #> 10 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… lactam… TACGTAG… t10      #> # ℹ 1,947 more rows #>  #> $counts #> # A tibble: 7,693 × 3 #>    count sample_id taxon_id #>    <dbl> <chr>     <chr>    #>  1 13473 s1        t7       #>  2 10322 s2        t7       #>  3    86 s4        t7       #>  4 19770 s5        t7       #>  5 28209 s6        t7       #>  6   416 s7        t7       #>  7  9508 s8        t7       #>  8 31623 s9        t7       #>  9   130 s10       t7       #> 10   922 s11       t7       #> # ℹ 7,683 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"class\"   \"order\"   \"family\"  \"genus\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\" # keep only the sample_id, location and method columns urt %>% select_samples(sample_id, location, method) #> $samples #> # A tibble: 217 × 3 #>    sample_id location method #>    <chr>     <chr>    <chr>  #>  1 s1        NF       S      #>  2 s2        N        S      #>  3 s3        NF       A      #>  4 s4        NF       S      #>  5 s5        NF       S      #>  6 s6        N        S      #>  7 s7        NF       S      #>  8 s8        NF       S      #>  9 s9        N        S      #> 10 s10       NF       S      #> # ℹ 207 more rows #>  #> $taxa #> # A tibble: 1,957 × 10 #>    taxon       kingdom phylum class order family genus species sequence taxon_id #>    <chr>       <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>    <chr>    #>  1 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… catarr… TACAGAG… t1       #>  2 TACGTAGGTG… Bacter… Firmi… Baci… Baci… Staph… Stap… aureus… TACGTAG… t2       #>  3 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… porci   TACAGAG… t3       #>  4 TACAGAGGGT… Bacter… Prote… Gamm… Pseu… Morax… Mora… bovis/… TACAGAG… t4       #>  5 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… mening… TACGTAG… t5       #>  6 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… canife… TACGTAT… t6       #>  7 TACGTAGGGT… Bacter… Actin… Acti… Cory… Coryn… Cory… accole… TACGTAG… t7       #>  8 TACGGAGGGT… Bacter… Prote… Gamm… Past… Paste… Haem… haemol… TACGGAG… t8       #>  9 TACGTATGTC… Bacter… Fusob… Fuso… Fuso… Fusob… Fuso… nuclea… TACGTAT… t9       #> 10 TACGTAGGGT… Bacter… Prote… Beta… Neis… Neiss… Neis… lactam… TACGTAG… t10      #> # ℹ 1,947 more rows #>  #> $counts #> # A tibble: 7,693 × 3 #>    count sample_id taxon_id #>    <dbl> <chr>     <chr>    #>  1 13473 s1        t7       #>  2 10322 s2        t7       #>  3    86 s4        t7       #>  4 19770 s5        t7       #>  5 28209 s6        t7       #>  6   416 s7        t7       #>  7  9508 s8        t7       #>  8 31623 s9        t7       #>  9   130 s10       t7       #> 10   922 s11       t7       #> # ℹ 7,683 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"class\"   \"order\"   \"family\"  \"genus\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain or remove a set of taxon variables — select_taxa","title":"Retain or remove a set of taxon variables — select_taxa","text":"Retain remove set taxon variables","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain or remove a set of taxon variables — select_taxa","text":"","code":"select_taxa(ta, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain or remove a set of taxon variables — select_taxa","text":"ta tidytacos object. ... Selection criteria taxa table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain or remove a set of taxon variables — select_taxa","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/select_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain or remove a set of taxon variables — select_taxa","text":"","code":"# drop the sequence column urt %>% select_taxa(-sequence) #> Warning: Not all default rank names found. Replacing them with: #>  c(\"kingdom\",\"phylum\",\"class\",\"order\",\"family\",\"genus\",\"species\") #>  #> If these are not the rank names of your taxon table in descending order,  #> please set them manually using 'set_rank_names()'  # keep only the taxon_id and genus columns urt %>% select_taxa(taxon_id, genus) #> Warning: Not all default rank names found. Replacing them with: #>  c(\"genus\") #>  #> If these are not the rank names of your taxon table in descending order,  #> please set them manually using 'set_rank_names()'"},{"path":"https://lebeerlab.github.io/tidytacos/reference/set_rank_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set rank names for a tidytacos object — set_rank_names","title":"Set rank names for a tidytacos object — set_rank_names","text":"rank names used describe taxa taxa table. Tidytacos expects vector different names ranks used describe taxa. order names highest rank lowest rank.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/set_rank_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set rank names for a tidytacos object — set_rank_names","text":"","code":"set_rank_names(ta, rank_names)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/set_rank_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set rank names for a tidytacos object — set_rank_names","text":"ta tidytacos object rank_names vector containing names ranks used describe taxa","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/set_rank_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set rank names for a tidytacos object — set_rank_names","text":"updated tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/set_rank_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set rank names for a tidytacos object — set_rank_names","text":"Eg: c('Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_alphas.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a boxplot of every alpha metric per group in the samples table of a tidytaco object. If no alpha metrics are present, all available ones are added. — tacoplot_alphas","title":"Return a boxplot of every alpha metric per group in the samples table of a tidytaco object. If no alpha metrics are present, all available ones are added. — tacoplot_alphas","text":"Return boxplot every alpha metric per group samples table tidytaco object. alpha metrics present, available ones added.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_alphas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a boxplot of every alpha metric per group in the samples table of a tidytaco object. If no alpha metrics are present, all available ones are added. — tacoplot_alphas","text":"","code":"tacoplot_alphas(ta, group_by, compare_means = FALSE, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_alphas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a boxplot of every alpha metric per group in the samples table of a tidytaco object. If no alpha metrics are present, all available ones are added. — tacoplot_alphas","text":"ta tidytacos object. group_by name variable samples table group samples. compare_means Add result statistical test plot, comparing means groups. Default FALSE. ... See stat_compare_means additional arguments can given test.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_codifab.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a compositional differential abundance plot — tacoplot_codifab","title":"Generate a compositional differential abundance plot — tacoplot_codifab","text":"function returns plot visualize differential abundance taxa conditions, compared taxa references. differential abundances already calculated add_codifab. Taxa relatively high number significantly different ratios, can considered abundant one condition versus .","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_codifab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a compositional differential abundance plot — tacoplot_codifab","text":"","code":"tacoplot_codifab(ta, diffabun_var)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_codifab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a compositional differential abundance plot — tacoplot_codifab","text":"ta tidytacos object. diffabun_var variable differential abundances taxon_pair table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_codifab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a compositional differential abundance plot — tacoplot_codifab","text":"ggplot object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_codifab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a compositional differential abundance plot — tacoplot_codifab","text":"Significance tests determined capping false discovery rate 10 non-independent tests. See [p.adjust].","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an euler diagram of overlapping taxon_ids between conditions — tacoplot_euler","title":"Return an euler diagram of overlapping taxon_ids between conditions — tacoplot_euler","text":"Return euler diagram overlapping taxon_ids conditions","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an euler diagram of overlapping taxon_ids between conditions — tacoplot_euler","text":"","code":"tacoplot_euler(ta, condition, shape = \"ellipse\", ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an euler diagram of overlapping taxon_ids between conditions — tacoplot_euler","text":"ta tidytacos object. condition name variable samples table contains categorical value. shape shape plot groups ; choice circle ellipse ... Extra arguments pass euler function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an ordination plot of the samples — tacoplot_ord","title":"Return an ordination plot of the samples — tacoplot_ord","text":"Creates ordination plot beta diversity samples tidytacos object. can used gauge similarity samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an ordination plot of the samples — tacoplot_ord","text":"","code":"tacoplot_ord(   ta,   x = NULL,   palette = NULL,   ord = \"pcoa\",   distance = \"bray\",   stat.method = NULL,   title = NULL,   ... )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an ordination plot of the samples — tacoplot_ord","text":"ta tidytacos object. x column name used color sample groups . palette vector colors, used palette coloring sample groups. ord ordination technique use. Choice pcoa, tsne umap. distance distance algorithm use, see vegdist. stat.method statistic print figure, choice mantel anosim. title string display title plot. ... Extra arguments pass add_ord function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return an ordination plot of the samples — tacoplot_ord","text":"","code":"tacoplot_ord(urt, x=location) #> Warning: Removed 3 empty samples.   # set plate to character, to avoid it being treated as a continuous variable urt <- urt %>% mutate_samples(plate=as.character(plate)) tacoplot_ord(urt, x=plate, ord=\"umap\", distance=\"aitchison\",stat.method=\"permanova\") #> Warning: Removed 3 empty samples."},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord_ly.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an interactive ordination plot of the samples — tacoplot_ord_ly","title":"Return an interactive ordination plot of the samples — tacoplot_ord_ly","text":"Creates interactive ordination plot beta diversity samples tidytacos object. can used gauge similarity samples.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord_ly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an interactive ordination plot of the samples — tacoplot_ord_ly","text":"","code":"tacoplot_ord_ly(   ta,   x = NULL,   samplenames = sample_id,   ord = \"pcoa\",   dims = 2,   distance = \"bray\",   stat.method = NULL,   palette = NULL,   title = NULL,   ... )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_ord_ly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an interactive ordination plot of the samples — tacoplot_ord_ly","text":"ta tidytacos object. x string, representing column name used color sample groups . samplenames column sample table samplenames, defaults sample_id. ord ordination technique use. Choice pcoa, tsne umap. dims amount dimensions plot, 2 3. distance distance algorithm use, see vegdist. stat.method statistic print figure, choice mantel anosim. palette vector colors, used palette coloring sample title string display title plot. groups. ... Extra arguments pass add_ord function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_prevalences.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a heatmap of all taxa above a certain threshold prevalence per condition, clusters them and compares prevalences with a fisher_test. — tacoplot_prevalences","title":"Return a heatmap of all taxa above a certain threshold prevalence per condition, clusters them and compares prevalences with a fisher_test. — tacoplot_prevalences","text":"See pheatmap additional arguments can given heatmap. Example usage: tacoplot_prevalences(urt,location,treeheight_row=0, cutree_rows=4,fontsize=6,cellwidth=15)","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_prevalences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a heatmap of all taxa above a certain threshold prevalence per condition, clusters them and compares prevalences with a fisher_test. — tacoplot_prevalences","text":"","code":"tacoplot_prevalences(   ta,   condition,   cutoff = 0.1,   fisher = T,   adjp_method = \"fdr\",   ... )"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_prevalences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a heatmap of all taxa above a certain threshold prevalence per condition, clusters them and compares prevalences with a fisher_test. — tacoplot_prevalences","text":"ta tidytacos object. condition row name condition rrevalences compared. cutoff minimum prevalence taxon included heatmap. fisher Run fisher test relative prevalences condition plot resulting adjusted p-values *(<.05), **(<.01), ***(<.001) ****(<.0001). adjp_method method adjust p-values, see adjust_pvalue. ... Extra arguments pass pheatmap function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a bar plot of the samples — tacoplot_stack","title":"Return a bar plot of the samples — tacoplot_stack","text":"Plots stacked bar plot samples tidytacos object inspect taxonomic profile.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a bar plot of the samples — tacoplot_stack","text":"","code":"tacoplot_stack(ta, n = 12, x = sample_clustered, pie = FALSE, order_by = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a bar plot of the samples — tacoplot_stack","text":"ta tidytacos object. n integer, representing amount colors used depict x name column name used represent samples x-axis pie boolean, whether represent profile pie chart. Default FALSE, pie chart representations can misleading interpret. order_by optional column name order samples . examples order_by=sample order x-axis sample names instead similar profiles.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack_ly.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an interactive bar plot of the samples — tacoplot_stack_ly","title":"Return an interactive bar plot of the samples — tacoplot_stack_ly","text":"Plots interactive stacked bar plot samples tidytacos object inspect taxonomic profile.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack_ly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an interactive bar plot of the samples — tacoplot_stack_ly","text":"","code":"tacoplot_stack_ly(ta, n = 12, x = sample_clustered, order_by = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_stack_ly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an interactive bar plot of the samples — tacoplot_stack_ly","text":"ta tidytacos object. n integer, representing amount colors used depict different taxa. x string, representing column name used label x-axis order_by optional column name order samples . examples order_by=sample order x-axis sample names instead similar profiles.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a venn diagram of overlapping taxon_ids between conditions — tacoplot_venn","title":"Return a venn diagram of overlapping taxon_ids between conditions — tacoplot_venn","text":"Return venn diagram overlapping taxon_ids conditions","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a venn diagram of overlapping taxon_ids between conditions — tacoplot_venn","text":"","code":"tacoplot_venn(ta, condition, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a venn diagram of overlapping taxon_ids between conditions — tacoplot_venn","text":"ta tidytacos object. condition name variable samples table contains categorical value. ... Extra arguments pass ggVennDiagram function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn_ly.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an interactive venn diagram of overlapping taxon_ids between conditions — tacoplot_venn_ly","title":"Return an interactive venn diagram of overlapping taxon_ids between conditions — tacoplot_venn_ly","text":"Return interactive venn diagram overlapping taxon_ids conditions","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn_ly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an interactive venn diagram of overlapping taxon_ids between conditions — tacoplot_venn_ly","text":"","code":"tacoplot_venn_ly(ta, condition, ...)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_venn_ly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an interactive venn diagram of overlapping taxon_ids between conditions — tacoplot_venn_ly","text":"ta tidytacos object. condition name variable samples table contains categorical value. ... Extra arguments pass ggVennDiagram function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a visualization designed for a small number of samples — tacoplot_zoom","title":"Return a visualization designed for a small number of samples — tacoplot_zoom","text":"Return visualization designed small number samples","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a visualization designed for a small number of samples — tacoplot_zoom","text":"","code":"tacoplot_zoom(ta, sample = sample_id, n = 15, nrow = NULL)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacoplot_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a visualization designed for a small number of samples — tacoplot_zoom","text":"ta tidytacos object. sample string, representing unique sample name interest n integer, representing amount colors used depict taxa nrow integer, representing amount rows facet_wrap","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacosum.html","id":null,"dir":"Reference","previous_headings":"","what":"Return some descriptive numbers — tacosum","title":"Return some descriptive numbers — tacosum","text":"tacosum returns number samples, taxa reads tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacosum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return some descriptive numbers — tacosum","text":"","code":"tacosum(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacosum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return some descriptive numbers — tacosum","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tacosum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return some descriptive numbers — tacosum","text":"","code":"# Initiate counts matrix x <- matrix(  c(1500, 1300, 280, 356),  ncol = 2 ) rownames(x) <- c(\"taxon1\", \"taxon2\") colnames(x) <- c(\"sample1\", \"sample2\")  # Convert to tidytacos object data <- create_tidytacos(x, taxa_are_columns = FALSE)  # Report numbers numbers <- data %>% tacosum()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the taxon table — taxa","title":"Extract the taxon table — taxa","text":"Extract taxon table","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the taxon table — taxa","text":"","code":"taxa(ta)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the taxon table — taxa","text":"ta tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxonlist_per_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list of taxon IDs per condition — taxonlist_per_condition","title":"Return a list of taxon IDs per condition — taxonlist_per_condition","text":"function returns named list taxon_ids per distinct value categorical column samples table.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxonlist_per_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list of taxon IDs per condition — taxonlist_per_condition","text":"","code":"taxonlist_per_condition(ta, condition, read_treshold = 0)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxonlist_per_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a list of taxon IDs per condition — taxonlist_per_condition","text":"ta tidytacos object. condition name variable sample table contains categorical value. read_treshold minimum read count consider taxon.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/taxonlist_per_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list of taxon IDs per condition — taxonlist_per_condition","text":"list taxon_id vectors.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/test_taco.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidytacos object for testing/example purporses — test_taco","title":"Create a tidytacos object for testing/example purporses — test_taco","text":"Create tidytacos object testing/example purporses","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/test_taco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidytacos object for testing/example purporses — test_taco","text":"","code":"test_taco()"},{"path":"https://lebeerlab.github.io/tidytacos/reference/test_taco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tidytacos object for testing/example purporses — test_taco","text":"small tidytacos object","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidy_count_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert counts tidy data frame to matrix — tidy_count_to_matrix","title":"Convert counts tidy data frame to matrix — tidy_count_to_matrix","text":"tidy_count_to_matrix returns numerical matrix given tidy counts data frame.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidy_count_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert counts tidy data frame to matrix — tidy_count_to_matrix","text":"","code":"tidy_count_to_matrix(counts, value = count)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidy_count_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert counts tidy data frame to matrix — tidy_count_to_matrix","text":"counts counts tidy data frame converted. value Name column containing counts data. Default \"counts\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidy_count_to_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert counts tidy data frame to matrix — tidy_count_to_matrix","text":"function convert counts tidy data frame numerical counts matrix. convert numerical counts matrix counts tidy data frame use tidy_count_to_matrix.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"tidytacos: Functions to manipulate and visualize amplicon count data. — tidytacos","title":"tidytacos: Functions to manipulate and visualize amplicon count data. — tidytacos","text":"tidytacos R package analysis amplicon count data: abundances amplicon sequences (either clustered OTUs exact variants) samples. package builds tidyverse created Hadley Wickham: data stored tidy tables row observation column variable. addition, package supplies set \"verbs\": functions take tidytacos object first argument also return tidytacos object. functionality currently implemented form verbs, soon remediated.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/tidytacos.html","id":"author-s-","dir":"Reference","previous_headings":"","what":"Author(s)","title":"tidytacos: Functions to manipulate and visualize amplicon count data. — tidytacos","text":"Stijn Wittouck wittouck_stijn@hotmail.com","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_biom.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the counts of the tidytacos object to a biom file — to_biom","title":"Write the counts of the tidytacos object to a biom file — to_biom","text":"Uses taxon_id sample_id columns create dense biom file (v1, json). default ASV/OTU level. taxonomy level, one first needs aggregate taxa.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_biom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the counts of the tidytacos object to a biom file — to_biom","text":"","code":"to_biom(ta, filename = \"asvs.biom\")"},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_biom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the counts of the tidytacos object to a biom file — to_biom","text":"ta tidytacos object. filename name resulting biom table file, defaults 'asvs.biom'.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the sequences of the taxa table to a fasta file — to_fasta","title":"Write the sequences of the taxa table to a fasta file — to_fasta","text":"Uses taxon_col sequence_col columns write sequences fasta file per taxon.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the sequences of the taxa table to a fasta file — to_fasta","text":"","code":"to_fasta(ta, filename = \"asvs.fasta\", taxon_col = taxon_id, seq_col = sequence)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/to_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the sequences of the taxa table to a fasta file — to_fasta","text":"ta tidytacos object. filename name resulting biom table file, defaults 'asvs.fasta'. taxon_col name column taxa table used id sequences (taxon_id default). seq_col name sequence column taxa table (sequence default).","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/trim_asvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim all sequences — trim_asvs","title":"Trim all sequences — trim_asvs","text":"trim_asvs trims sequence ends sequence supplied taxa table. function assumes sequence variable taxon table called \"sequence\".","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/trim_asvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim all sequences — trim_asvs","text":"","code":"trim_asvs(ta, start, end)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/trim_asvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim all sequences — trim_asvs","text":"ta tidytacos object. start Index start trimming. end Index stop trimming.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/trim_asvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim all sequences — trim_asvs","text":"tidytacos object.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/trim_asvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim all sequences — trim_asvs","text":"","code":"# keep only the first 200 nucleotides of the sequences urt %>% trim_asvs(0, 200) #> $samples #> # A tibble: 217 × 9 #>    run    condition participant location method plate passes_qc sample sample_id #>    <chr>  <chr>     <chr>       <chr>    <chr>  <dbl> <lgl>     <chr>  <chr>     #>  1 20161… CON       CON100      NF       S          3 TRUE      CON10… s1        #>  2 20161… CON       CON100      N        S          3 TRUE      CON10… s2        #>  3 20161… CON       CON10       NF       A          1 TRUE      CON10… s3        #>  4 20161… CON       CON10       NF       S          1 TRUE      CON10… s4        #>  5 20161… CON       CON11       NF       S          1 TRUE      CON11… s5        #>  6 20161… CON       CON11       N        S          1 TRUE      CON11… s6        #>  7 20161… CON       CON12       NF       S          1 TRUE      CON12… s7        #>  8 20161… CON       CON13       NF       S          1 TRUE      CON13… s8        #>  9 20161… CON       CON13       N        S          1 TRUE      CON13… s9        #> 10 20161… CON       CON14       NF       S          1 TRUE      CON14… s10       #> # ℹ 207 more rows #>  #> $taxa #> # A tibble: 1,854 × 8 #>    taxon_id genus                   family   order class phylum kingdom sequence #>    <chr>    <chr>                   <chr>    <chr> <chr> <chr>  <chr>   <chr>    #>  1 t1       Moraxella               Moraxel… Pseu… Gamm… Prote… Bacter… TACAGAG… #>  2 t100     Staphylococcus          Staphyl… Baci… Baci… Firmi… Bacter… TACGTAG… #>  3 t1000    Pseudarcicella          Cytopha… Cyto… Cyto… Bacte… Bacter… TACGGAG… #>  4 t1002    Leptotrichia            Leptotr… Fuso… Fuso… Fusob… Bacter… TACGTAT… #>  5 t1003    hgcI_clade              Sporich… Fran… Acti… Actin… Bacter… TACATAG… #>  6 t1004    Prevotella              Prevote… Bact… Bact… Bacte… Bacter… TACGGAA… #>  7 t1005    Peptoniphilus           Family_… Clos… Clos… Firmi… Bacter… TACGTAG… #>  8 t1006    Hymenobacter            Cytopha… Cyto… Cyto… Bacte… Bacter… TACGGAG… #>  9 t1008    Dialister               Veillon… Sele… Nega… Firmi… Bacter… TACGTAG… #> 10 t1009    Lachnospiraceae_UCG-005 Lachnos… Clos… Clos… Firmi… Bacter… TACGTAT… #> # ℹ 1,844 more rows #>  #> $counts #> # A tibble: 7,693 × 3 #>    sample_id taxon_id count #>    <chr>     <chr>    <dbl> #>  1 s1        t108        60 #>  2 s1        t11       2703 #>  3 s1        t14       5661 #>  4 s1        t146       437 #>  5 s1        t1511       21 #>  6 s1        t1792        8 #>  7 s1        t2        4153 #>  8 s1        t203         8 #>  9 s1        t23         83 #> 10 s1        t30       2646 #> # ℹ 7,683 more rows #>  #> $rank_names #> [1] \"kingdom\" \"phylum\"  \"class\"   \"order\"   \"family\"  \"genus\"   #>  #> attr(,\"class\") #> [1] \"tidytacos\""},{"path":"https://lebeerlab.github.io/tidytacos/reference/urt.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper Respiratory Tract samples — urt","title":"Upper Respiratory Tract samples — urt","text":"Human microbiome samples upper respiratory tract (URT), taken paper De Boeck et al. contains nose well nasopharynx samples. samples taken using swab method, minority taking aspirate method.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/urt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper Respiratory Tract samples — urt","text":"","code":"urt"},{"path":"https://lebeerlab.github.io/tidytacos/reference/urt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Upper Respiratory Tract samples — urt","text":"## `urt` tidytacos object 1,947 taxa 207 samples: participant individual participant ID location nose (N) nasopharynx (NF) method swab (S) aspirate () plate three plates sequenced sample located ","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/urt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Upper Respiratory Tract samples — urt","text":"<https://www.frontiersin.org/journals/microbiology/articles/10.3389/fmicb.2017.02372/full>","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/write_tidytacos.html","id":null,"dir":"Reference","previous_headings":"","what":"Write community data in tidytacos format — write_tidytacos","title":"Write community data in tidytacos format — write_tidytacos","text":"write_tidytacos saves tidytacos object 3 .csv files. format allows easy loading tidytacos object using read_tidytacos function.","code":""},{"path":"https://lebeerlab.github.io/tidytacos/reference/write_tidytacos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write community data in tidytacos format — write_tidytacos","text":"","code":"write_tidytacos(ta, dout)"},{"path":"https://lebeerlab.github.io/tidytacos/reference/write_tidytacos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write community data in tidytacos format — write_tidytacos","text":"ta tidytacos object. dout directory store three tidytacos tables .","code":""}]
